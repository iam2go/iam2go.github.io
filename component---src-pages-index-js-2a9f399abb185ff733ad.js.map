{"version":3,"file":"component---src-pages-index-js-2a9f399abb185ff733ad.js","mappings":"kMAEA,MAAMA,EAASC,IAAmB,IAAlB,SAAEC,GAAUD,EAC1B,OAAOE,EAAAA,cAAA,OAAKC,UAAU,+BAA+BF,EAAe,EAGhEG,EAAMC,IAAe,IAAd,KAAEC,GAAMD,EACnB,OACEH,EAAAA,cAACK,EAAAA,KAAI,CAACC,GAAK,SAAQF,KACjBJ,EAAAA,cAAA,OAAKC,UAAU,yQACZG,GAEE,C,8JCqCX,MA5CkBN,IAAqB,IAADS,EAAAC,EAAAC,EAAA,IAAnB,KAAEC,EAAI,KAAEC,GAAMb,EAC/B,MAAMc,GAAQC,EAAAA,EAAAA,GAASF,SAAe,QAAXJ,EAAJI,EAAMG,iBAAS,IAAAP,GAAiB,QAAjBC,EAAfD,EAAiBQ,uBAAe,IAAAP,OAA5B,EAAJA,EAAkCQ,iBACzD,OACEhB,EAAAA,cAAA,MAAIC,UAAU,4DACXW,GACCZ,EAAAA,cAACiB,EAAAA,EAAW,CACVL,MAAOA,EACPM,IAAKP,EAAKQ,MACVlB,UAAU,0BAGdD,EAAAA,cAAA,WACEC,UAAU,iBACVmB,WAAS,EACTC,SAAS,6BAETrB,EAAAA,cAAA,UACEA,EAAAA,cAACK,EAAAA,KAAI,CAACC,GAAII,EAAMY,SAAS,OACvBtB,EAAAA,cAAA,QAAMsB,SAAS,YAAYX,EAAKQ,SAGpCnB,EAAAA,cAACH,EAAAA,EAAM,KACK,QADLY,EACJE,EAAKY,YAAI,IAAAd,OAAA,EAATA,EAAWe,KAAIC,GACdzB,EAAAA,cAACE,EAAAA,EAAG,CACFwB,IAAKD,EACLxB,UAAU,yFACVG,KAAMqB,OAIZzB,EAAAA,cAAA,OAAKC,UAAU,4DACbD,EAAAA,cAAA,KACE2B,wBAAyB,CACvBC,OAAQjB,EAAKkB,aAAelB,EAAKmB,SAEnCR,SAAS,iBAGbtB,EAAAA,cAAA,OAAKC,UAAU,+BAA+BU,EAAKoB,OAElD,ECLT,MA9BkBjC,IAAyB,IAADkC,EAAA,IAAvB,KAAEC,EAAI,SAAEC,GAAUpC,EACnC,MAAMqC,GAAkC,QAAtBH,EAAAC,EAAKG,KAAKC,oBAAY,IAAAL,OAAA,EAAtBA,EAAwBb,QAAU,QAC9CmB,EAAQL,EAAKM,OAAOC,MAE1B,OAAqB,IAAjBF,EAAMG,OAENzC,EAAAA,cAAC0C,EAAAA,EAAM,CAACR,SAAUA,EAAUf,MAAOgB,GAEjCnC,EAAAA,cAAA,OAAKC,UAAU,qDAAoD,gBAQvED,EAAAA,cAAC0C,EAAAA,EAAM,CAACR,SAAUA,EAAUf,MAAOgB,GACjCnC,EAAAA,cAAA,MAAI2C,MAAO,CAAEC,UAAY,SACtBN,EAAMd,KAAIb,GACTX,EAAAA,cAAC6C,EAAS,CACRnB,IAAKf,EAAKmC,OAAOpC,KACjBA,KAAMC,EAAKmC,OAAOpC,KAClBC,KAAMA,EAAKoC,iBAIV,EAWN,MAAMC,EAAOA,IAAMhD,EAAAA,cAACiD,EAAAA,EAAG,CAAC9B,MAAM,Q","sources":["webpack://leego.dev.log/./src/components/Tag/Tag.js","webpack://leego.dev.log/./src/components/Post/PostBlock.js","webpack://leego.dev.log/./src/pages/index.js"],"sourcesContent":["import { Link } from \"gatsby\"\nimport React from \"react\"\nconst TagBox = ({ children }) => {\n  return <div className=\"flex gap-1.5 my-3 flex-wrap\">{children}</div>\n}\n\nconst Tag = ({ text }) => {\n  return (\n    <Link to={`/tags/${text}`}>\n      <div className=\"text-text-default px-4 font-normal text-opacity-80 bg-background-primary bg-opacity-30 border-text-default border border-opacity-20 rounded-2xl text-xs  leading-6 hover:bg-accent-default hover:bg-opacity-50 hover:border-accent-default cursor-pointer transition \">\n        {text}\n      </div>\n    </Link>\n  )\n}\n\nexport { TagBox, Tag }\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport { Tag, TagBox } from \"../Tag\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\n\nconst PostBlock = ({ slug, post }) => {\n  const image = getImage(post?.thumbnail?.childImageSharp?.gatsbyImageData)\n  return (\n    <li className=\"bg-background-sub min-h-[12rem] rounded-xl p-8 my-8 flex\">\n      {image && (\n        <GatsbyImage\n          image={image}\n          alt={post.title}\n          className=\"w-56 rounded-lg mr-10\"\n        />\n      )}\n      <article\n        className=\"post-list-item\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <h2>\n          <Link to={slug} itemProp=\"url\">\n            <span itemProp=\"headline\">{post.title}</span>\n          </Link>\n        </h2>\n        <TagBox>\n          {post.tags?.map(tag => (\n            <Tag\n              key={tag}\n              className=\"text-text-default px-4 bg-background-primary rounded-2xl text-sm  font-light leading-6\"\n              text={tag}\n            />\n          ))}\n        </TagBox>\n        <div className=\"text-text-default text-sm  font-light my-5  line-clamp-2\">\n          <p\n            dangerouslySetInnerHTML={{\n              __html: post.description || post.excerpt,\n            }}\n            itemProp=\"description\"\n          />\n        </div>\n        <div className=\"text-accent-default text-xs\">{post.date}</div>\n      </article>\n    </li>\n  )\n}\n\nexport default PostBlock\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nimport \"../styles/global.css\"\nimport \"../styles/posting.css\"\nimport PostBlock from \"../components/Post/PostBlock\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMdx.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        {/* <Bio /> */}\n        <div className=\"w-2/3 mx-auto text-center my-32 text-text-default\">\n          게시글이 없습니다😥\n        </div>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => (\n          <PostBlock\n            key={post.fields.slug}\n            slug={post.fields.slug}\n            post={post.frontmatter}\n          />\n        ))}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"Home\" />\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMdx(sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"YYYY.MM.DD\")\n          title\n          description\n          tags\n          thumbnail {\n            childImageSharp {\n              gatsbyImageData(width: 400)\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["TagBox","_ref","children","React","className","Tag","_ref2","text","Link","to","_post$thumbnail","_post$thumbnail$child","_post$tags","slug","post","image","getImage","thumbnail","childImageSharp","gatsbyImageData","GatsbyImage","alt","title","itemScope","itemType","itemProp","tags","map","tag","key","dangerouslySetInnerHTML","__html","description","excerpt","date","_data$site$siteMetada","data","location","siteTitle","site","siteMetadata","posts","allMdx","nodes","length","Layout","style","listStyle","PostBlock","fields","frontmatter","Head","Seo"],"sourceRoot":""}