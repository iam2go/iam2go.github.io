{"version":3,"file":"component---src-templates-blog-post-js-content-file-path-content-blog-errorlog-chunk-load-error-mdx-60ddf52c145b9187b72b.js","mappings":"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","sources":["webpack://leego.dev.log/./content/blog/ERRORLOG/chunk-load-error.mdx","webpack://leego.dev.log/./src/templates/blog-post.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\",\n    span: \"span\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(\"img\", {\n    src: \"https://blog.kakaocdn.net/dn/QVBZA/btsKyesaiap/J1gpij3knSAts2W7CCKkt0/img.png\",\n    className: \"m-auto\"\n  }), \"\\n\", React.createElement(_components.h2, {\n    id: \"문제파악\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EB%AC%B8%EC%A0%9C%ED%8C%8C%EC%95%85\",\n    \"aria-label\": \"문제파악 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"문제파악\"), \"\\n\", React.createElement(_components.p, null, \"어느 날부터 간헐적으로 ChunkLoadError가 발생했다.\"), \"\\n\", React.createElement(_components.p, null, \"보통 이러한 이슈는 배포 후 chunk 파일의 해쉬가 새롭게 바뀌면서 이전 파일을 보고있던 사용자가 페이지를 이동할 때 이전 chunk파일을 찾기 때문에 발생하는 이슈이다. 하지만 나의 경우 배포여부와 상관없이 chunk를 로드하지 못했다는 에러를 뿜어냈다.\"), \"\\n\", React.createElement(_components.p, null, \"source탭에서 가져온 파일을 살펴보니 \", React.createElement(_components.code, null, \"812.b596d57c.chunk.js\"), \" 파일은 최신배포 버전에 속한 파일이 맞으며, 실제 존재한다.\"), \"\\n\", React.createElement(_components.p, null, \"다만 해당 이슈가 발생했을때는 원인은 모르겠지만 해당 chunk파일을 비롯한 몇몇 chunk파일을 가져오지 않고있었다.\"), \"\\n\", React.createElement(_components.p, null, \"동일한 프로젝트를 배포한 다른 환경에서는 해당 현상이 발생하지 않는 것을 확인했다. 이를 통해 코드나 서버 설정보다는 내가 컨트롤할 수 없는 네트워크나 특정 환경적인 문제일 것이라 판단했다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"해결\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%ED%95%B4%EA%B2%B0\",\n    \"aria-label\": \"해결 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"해결?\"), \"\\n\", React.createElement(_components.p, null, \"하지만 그렇다고 이슈를 방치할 수는 없었기 때문에, 코드스플리팅 부분에 방어 코드를 추가했다. chunk파일을 로드하지 못하는 상황이 발생할 경우, 이를 재시도하도록 설정하여 에러 상황에서도 chunk 파일을 정상적으로 로드할 수 있도록 개선했다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"\\nconst retry = (\\n  callback: () => LazyImport,\\n  retries = 5,\\n  interval = 1000\\n): LazyImportResult => {\\n  return new Promise((resolve, reject) => {\\n    callback()\\n      .then(resolve)\\n      .catch((error) => {\\n        if (retries <= 1) {\\n          reject(error);\\n          return;\\n        }\\n        setTimeout(() => {\\n          retry(callback, retries - 1, interval).then(resolve, reject);\\n        }, interval);\\n      });\\n  });\\n};\\n\\nconst lazyRetry = (importFunc: () => LazyImport) =>\\n  lazy(() => retry(importFunc));\\n\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"\\nconst Main = withSuspense(lazyRetry(() => import('@/components/pages/Main')));\\n\")), \"\\n\", React.createElement(_components.p, null, \"이런 식으로 사용해주면 된다.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/ego/Documents/go/ego-blog/content/blog/ERRORLOG/chunk-load-error.mdx\";\nimport * as React from \"react\";\nimport {Link, graphql} from \"gatsby\";\nimport {HiChevronRight} from \"@react-icons/all-files/hi/HiChevronRight\";\nimport {HiChevronLeft} from \"@react-icons/all-files/hi/HiChevronLeft\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport {Tag, TagBox} from \"../components/Tag\";\nimport {CodeBlock} from \"../components/Block/CodeBlock\";\nimport Comment from \"../components/Post/Comment\";\nimport TableOfContents from \"../components/TableOfContents/TableOfContents\";\nconst components = {\n  img: ({src, alt}) => React.createElement(\"img\", {\n    src: src,\n    alt: alt,\n    className: \"m-auto md:w-3/4\"\n  }),\n  pre: CodeBlock,\n  code: props => React.createElement(\"code\", Object.assign({}, props, {\n    className: \"bg-background-primary text-accent-default bg-opacity-70\"\n  }))\n};\nconst BlogPostTemplate = ({data: {previous, next, site, mdx: post}, location, children}) => {\n  const siteTitle = site.siteMetadata?.title || `Title`;\n  return React.createElement(Layout, {\n    location: location,\n    title: siteTitle\n  }, React.createElement(\"article\", {\n    className: \"blog-post px-8 pt-10\",\n    itemScope: true,\n    itemType: \"http://schema.org/Article\"\n  }, React.createElement(\"header\", {\n    className: \"text-center py-14\"\n  }, React.createElement(\"h1\", {\n    itemProp: \"headline\"\n  }, post.frontmatter.title), React.createElement(\"p\", {\n    className: \"text-accent-default text-xs mt-8\"\n  }, post.frontmatter.date)), React.createElement(\"section\", {\n    className: \"h-fit my-28 text-text-default\",\n    itemProp: \"articleBody\"\n  }, React.createElement(MDXProvider, {\n    components: components\n  }, children)), React.createElement(TagBox, null, post.frontmatter.tags.map(tag => React.createElement(Tag, {\n    key: tag,\n    text: tag\n  }))), React.createElement(\"hr\", {\n    className: \"my-10\"\n  }), React.createElement(Comment), React.createElement(\"footer\")), React.createElement(\"nav\", {\n    className: \"blog-post-nav px-8 mt-8\"\n  }, React.createElement(\"ul\", {\n    className: \"flex flex-wrap justify-between list-none p-0 text-text-default\"\n  }, previous ? React.createElement(Link, {\n    to: previous.fields.slug,\n    rel: \"prev\"\n  }, React.createElement(\"li\", {\n    className: \"bg-background-primary/50 text-sm p-3 rounded-xl h-fit flex items-center gap-3\"\n  }, React.createElement(HiChevronLeft, {\n    size: 22,\n    className: \"text-accent-default\"\n  }), React.createElement(\"p\", {\n    className: \"max-w-[28rem]\"\n  }, previous.frontmatter.title))) : React.createElement(\"div\"), next && React.createElement(Link, {\n    to: next.fields.slug,\n    rel: \"next\"\n  }, React.createElement(\"li\", {\n    className: \"bg-background-primary/50 text-sm p-3 rounded-xl h-fit flex items-center gap-3\"\n  }, React.createElement(\"p\", {\n    className: \"max-w-[28rem]\"\n  }, next.frontmatter.title), React.createElement(HiChevronRight, {\n    size: 22,\n    className: \"text-accent-default\"\n  }))))), React.createElement(TableOfContents, {\n    contents: post.tableOfContents\n  }));\n};\nexport const Head = ({data: {mdx: post}}) => {\n  return React.createElement(Seo, {\n    title: post.frontmatter.title,\n    description: post.frontmatter.description || post.excerpt\n  });\n};\nBlogPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    mdx(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      tableOfContents\n      frontmatter {\n        title\n        date(formatString: \"YYYY.MM.DD\")\n        description\n        tags\n      }\n    }\n    previous: mdx(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: mdx(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","a","span","p","code","pre","_provideComponents","components","React","src","className","id","style","position","href","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","img","_ref","alt","CodeBlock","BlogPostTemplate","_ref2","_site$siteMetadata","data","previous","next","site","mdx","post","location","children","siteTitle","siteMetadata","title","Layout","itemScope","itemType","itemProp","frontmatter","date","MDXProvider","TagBox","tags","map","tag","Tag","key","text","Comment","Link","to","fields","slug","rel","HiChevronLeft","size","HiChevronRight","TableOfContents","contents","tableOfContents","Head","_ref3","Seo","description","excerpt","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}