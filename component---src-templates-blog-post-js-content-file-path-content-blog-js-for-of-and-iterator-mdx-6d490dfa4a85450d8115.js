"use strict";(self.webpackChunkleego_dev_log=self.webpackChunkleego_dev_log||[]).push([[808],{3419:function(e,t,l){l.r(t),l.d(t,{Head:function(){return g},default:function(){return v}});var n=l(1151),r=l(7294);function a(e){const t=Object.assign({h1:"h1",a:"a",span:"span",pre:"pre",code:"code",p:"p",strong:"strong",blockquote:"blockquote",em:"em",br:"br",h2:"h2",ul:"ul",li:"li"},(0,n.ah)(),e.components);return r.createElement(r.Fragment,null,r.createElement(t.h1,{id:"for-of문",style:{position:"relative"}},r.createElement(t.a,{href:"#for-of%EB%AC%B8","aria-label":"for of문 permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"for-of문"),"\n",r.createElement(t.pre,null,r.createElement(t.code,null,"for(let value of myArray){\n  console.log(value);\n}\n")),"\n",r.createElement(t.p,null,r.createElement(t.code,null,"for-in")," 문이 객체의 속성들을 순회하기 위한 구문이라면, ",r.createElement(t.code,null,"for-of")," 문은 배열의 요소들, 즉 data 를 순회하기 위한 구문이다. 정확히는 일반 ",r.createElement(t.code,null,"Object")," 요소를 제외한 ",r.createElement(t.code,null,"Array"),", ",r.createElement(t.code,null,"Map"),", ",r.createElement(t.code,null,"Set")," 등의 ",r.createElement(t.strong,null,"객체 타입을 순회"),"할 수 있다. (추가로 ",r.createElement(t.code,null,"String"),"도 가능하다. 문자열로 이루어진 배열로 보기 때문)"),"\n",r.createElement(t.p,null,r.createElement(t.code,null,"forEach"),"와는 다르게 ",r.createElement(t.code,null,"break"),", ",r.createElement(t.code,null,"continue"),", 그리고 ",r.createElement(t.code,null,"return")," 구문과 함께 사용할 수 있다."),"\n",r.createElement(t.p,null,r.createElement(t.code,null,"for-of"),"문은 어떤 메소드를 반복 호출하는 방식으로 동작한다. ",r.createElement(t.code,null,"Array"),", ",r.createElement(t.code,null,"Map"),", ",r.createElement(t.code,null,"Set")," 등의 객체들은 공통적으로 ",r.createElement(t.strong,null,"이터레이터(iterator) 메소드를 제공"),"한다. 일반 객체는 이터레이터 메소드를 제공하지 않기 때문에 ",r.createElement(t.code,null,"for-of"),"문으로 순회가 불가능하다."),"\n",r.createElement("img",{src:"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fbz236V%2Fbtrd1PkzFCf%2Fh2pFk6j0RhvuOE8KBNA0kk%2Fimg.png",width:"463",className:"m-auto"}),"\n",r.createElement(t.p,null,r.createElement(t.code,null,"Array"),"의 속성을 살펴보면 ",r.createElement(t.code,null,"Symbol.iterator"),"가 포함되어있다."),"\n",r.createElement("br"),"\n",r.createElement("img",{src:"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FwHN1D%2Fbtrd0k6S7wz%2FHCfIPAk9LgvAJjYqtF5oM0%2Fimg.png",width:"463",className:"m-auto"}),"\n",r.createElement(t.p,null,"반면 일반 ",r.createElement(t.code,null,"Object"),"에는 존재하지 않는다."),"\n",r.createElement(t.p,null,r.createElement(t.code,null,"Array"),"와 같이 이터레이터 메소드를 제공하여 ",r.createElement(t.code,null,"for-of"),"문으로 순회 가능한 객체를 '이터러블(Iterable)' 이라 한다."),"\n",r.createElement("br"),"\n",r.createElement("br"),"\n",r.createElement(t.h1,{id:"iterable의-정의",style:{position:"relative"}},r.createElement(t.a,{href:"#iterable%EC%9D%98-%EC%A0%95%EC%9D%98","aria-label":"iterable의 정의 permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Iterable의 정의"),"\n",r.createElement(t.p,null,"이터러블의 정의는 다음과 같다."),"\n",r.createElement(t.blockquote,null,"\n",r.createElement(t.p,null,r.createElement(t.em,null,"Symbol.iterator 메소드를 구현하거나 프로토타입 체인에 의해 상속한 객체로, for-of 문에서 순회할 수 있으며 Spread 문법의 대상으로 사용할 수 있다.")),"\n"),"\n",r.createElement("br"),"\n",r.createElement(t.p,null,"일반 객체도 간단하게 이터러블로 만들 수 있다.",r.createElement(t.br),"\n","객체 안에 ",r.createElement(t.code,null,"[Symbol.iterator]()"),"를 구현하면 된다. 이렇게 구현된 이터러블을 커스텀 이터러블이라 한다."),"\n",r.createElement(t.blockquote,null,"\n",r.createElement(t.p,null,"당신이 어떤 객체에든 ",r.createElement(t.strong,null,"myObject.toString()")," 메소드를 추가하면 JS가 이를 통해 해당 객체를 문자열로 변환하는 방법을 알아내는 것과 마찬가지로, 어떤 객체에든 ",r.createElement(t.code,null,"[Symbol.iterator]"),"메소드를 추가하면 JS는 해당 객체를 어떻게 순회(loop)해야 하는지 알아낸다."),"\n"),"\n",r.createElement("br"),"\n",r.createElement(t.h2,{id:"-iterator가-아닌-symboliterator-메소드를-사용하는-이유는-무엇인가",style:{position:"relative"}},r.createElement(t.a,{href:"#-iterator%EA%B0%80-%EC%95%84%EB%8B%8C-symboliterator-%EB%A9%94%EC%86%8C%EB%93%9C%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0%EB%8A%94-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80","aria-label":" iterator가 아닌 symboliterator 메소드를 사용하는 이유는 무엇인가 permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"💡 ",r.createElement(t.code,null,".iterator()"),"가 아닌 ",r.createElement(t.code,null,"[Symbol.iterator]")," 메소드를 사용하는 이유는 무엇인가"),"\n",r.createElement(t.p,null,"기존에 작선된 코드에서 어떤 객체가 이미 ",r.createElement(t.code,null,".iterator()"),"라는 메소드를 갖고 있다면 문제가 생긴다. 그래서 ",r.createElement(t.code,null,"iterator"),"라는 평범한 문자열 이름 대신 ",r.createElement(t.code,null,"Symbol"),"을 사용한 고유한(어떤 코드와도 충돌하지 않는) 메소드를 정의해준 것이다."),"\n",r.createElement(t.p,null,r.createElement(t.a,{href:"https://leego.github.io/JS/lets-explore-symbol/"},"🔗Symbol에 대해 알고싶다면 참고")),"\n",r.createElement("br"),"\n",r.createElement("br"),"\n",r.createElement(t.h1,{id:"symboliterator",style:{position:"relative"}},r.createElement(t.a,{href:"#symboliterator","aria-label":"symboliterator permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Symbol.iterator()"),"\n",r.createElement(t.p,null,r.createElement(t.code,null,"[Symbol.iterator]()")," 는 새로운 ",r.createElement(t.strong,null,"이터레이터 객체"),"를 반환한다."),"\n",r.createElement(t.p,null,"이터레이터 객체란 ",r.createElement(t.code,null,"next()")," 메소드를 가진 객체를 말한다."),"\n",r.createElement(t.p,null,"이 ",r.createElement(t.code,null,"next()")," 메소드는 이터러블의 각 요소를 순회하기 위한 포인터의 역할을 하며, 호출시마다 ",r.createElement(t.code,null,"value"),"와 ",r.createElement(t.code,null,"done")," 속성을 가진 이터레이터 ",r.createElement(t.code,null,"result")," 객체를 반환한다."),"\n",r.createElement(t.ul,null,"\n",r.createElement(t.li,null,r.createElement(t.code,null,"value"),"는 현재 순회중인 이터러블의 값을 반환하고,"),"\n",r.createElement(t.li,null,r.createElement(t.code,null,"done"),"은 이터러블의 순회 완료 여부를 반환한다."),"\n"),"\n",r.createElement(t.p,null,r.createElement(t.code,null,"for-of")," 문은 ",r.createElement(t.code,null,"[Symbol.iterator]()"),"메소드의 호출로 시작하여 ",r.createElement(t.code,null,"next()"),"를 반복적으로 호출하며 객체를 순회한다. 순회하면서 ",r.createElement(t.code,null,"next()"),"가 반환한 이터레이터 ",r.createElement(t.code,null,"result")," 객체의 ",r.createElement(t.code,null,"value")," 프로퍼티 값을 ",r.createElement(t.code,null,"for-of"),"문의 변수에 할당한다."),"\n",r.createElement(t.pre,null,r.createElement(t.code,null,"// 배열은 이터러블이다.\nconst array = [1, 2, 3];\n\n// 이터러블은 Symbol.iterator 메소드를 소유한다.\n// Symbol.iterator 메소드는 이터레이터를 반환한다.\nlet iter = array[Symbol.iterator]();\n\n// 이터레이터는 next 메소드를 소유한다.\n// next 메소드는 이터레이터 result 객체를 반환한다.\nconsole.log(iter.next()); // {value: 1, done: false}\nconsole.log(iter.next()); // {value: 2, done: false}\nconsole.log(iter.next()); // {value: 3, done: false}\nconsole.log(iter.next()); // {value: undefined, done: true}\n")),"\n",r.createElement(t.p,null,"위의 코드에서 보면, ",r.createElement(t.code,null,"next()"),"를 호출할 때 마다 요소를 하나씩 순회하며, 순회가 끝났을 때는 ",r.createElement(t.code,null,"done: true"),"를 반환한다."),"\n",r.createElement("br"),"\n",r.createElement("br"),"\n",r.createElement(t.h1,{id:"참고",style:{position:"relative"}},r.createElement(t.a,{href:"#%EC%B0%B8%EA%B3%A0","aria-label":"참고 permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"참고📌"),"\n",r.createElement(t.p,null,r.createElement(t.a,{href:"http://hacks.mozilla.or.kr/2015/08/es6-in-depth-iterators-and-the-for-of-loop/"},"http://hacks.mozilla.or.kr/2015/08/es6-in-depth-iterators-and-the-for-of-loop/")))}var c=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,n.ah)(),e.components);return t?r.createElement(t,e,r.createElement(a,e)):a(e)},o=l(1883),m=l(157),i=l(588),s=l(8709),u=l(9357),E=l(7174),d=l(4462),h=l(8336),p=l(1075);const f={img:e=>{let{src:t,alt:l}=e;return r.createElement("img",{src:t,alt:l,className:"m-auto md:w-3/4"})},pre:d.d,code:e=>r.createElement("code",Object.assign({},e,{className:"bg-background-primary text-accent-default bg-opacity-70"}))},b=e=>{var t;let{data:{previous:l,next:a,site:c,mdx:u},location:d,children:b}=e;const g=(null===(t=c.siteMetadata)||void 0===t?void 0:t.title)||"Title";return r.createElement(s.Z,{location:d,title:g},r.createElement("article",{className:"blog-post px-8 pt-10",itemScope:!0,itemType:"http://schema.org/Article"},r.createElement("header",{className:"text-center py-14"},r.createElement("h1",{itemProp:"headline"},u.frontmatter.title),r.createElement("p",{className:"text-accent-default text-xs mt-8"},u.frontmatter.date)),r.createElement("section",{className:"h-fit my-28 text-text-default",itemProp:"articleBody"},r.createElement(n.Zo,{components:f},b)),r.createElement(E.a,null,u.frontmatter.tags.map((e=>r.createElement(E.V,{key:e,text:e})))),r.createElement("hr",{className:"my-10"}),r.createElement(h.Z),r.createElement("footer")),r.createElement("nav",{className:"blog-post-nav px-8 mt-8"},r.createElement("ul",{className:"flex flex-wrap justify-between list-none p-0 text-text-default"},l?r.createElement(o.Link,{to:l.fields.slug,rel:"prev"},r.createElement("li",{className:"bg-background-primary/50 text-sm p-3 rounded-xl h-fit flex items-center gap-3"},r.createElement(i.D,{size:22,className:"text-accent-default"}),r.createElement("p",{className:"max-w-[28rem]"},l.frontmatter.title))):r.createElement("div"),a&&r.createElement(o.Link,{to:a.fields.slug,rel:"next"},r.createElement("li",{className:"bg-background-primary/50 text-sm p-3 rounded-xl h-fit flex items-center gap-3"},r.createElement("p",{className:"max-w-[28rem]"},a.frontmatter.title),r.createElement(m.M,{size:22,className:"text-accent-default"}))))),r.createElement(p.Z,{contents:u.tableOfContents}))},g=e=>{let{data:{mdx:t}}=e;return r.createElement(u.Z,{title:t.frontmatter.title,description:t.frontmatter.description||t.excerpt})};function v(e){return r.createElement(b,e,r.createElement(c,e))}}}]);
//# sourceMappingURL=component---src-templates-blog-post-js-content-file-path-content-blog-js-for-of-and-iterator-mdx-6d490dfa4a85450d8115.js.map