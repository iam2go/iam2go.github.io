{"version":3,"file":"component---src-templates-blog-post-js-content-file-path-content-blog-react-create-modal-using-portal-mdx-1fa5627182498b7fb926.js","mappings":"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","sources":["webpack://leego.dev.log/./content/blog/REACT/create-modal-using-portal.mdx","webpack://leego.dev.log/./src/templates/blog-post.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    strong: \"strong\",\n    pre: \"pre\",\n    code: \"code\",\n    a: \"a\",\n    blockquote: \"blockquote\",\n    h1: \"h1\",\n    span: \"span\",\n    img: \"img\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, React.createElement(_components.strong, null, \"모달\"), \"이란, 다이얼로그 실행 시 포커스와 제어권을 독점하여 다이얼로그를 종료하기 전까지 기존의 화면을 제어할 수 없는 기능을 뜻한다.\"), \"\\n\", React.createElement(_components.p, null, \"따라서 모달은 항상 화면의 최상위에 위치해야 하며, 모달이 열려있을 때는 기존 화면의 제어가 불가능해야 한다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.p, null, \"일반적인 방법으로 모달을 띄우는 방법은 다음과 같다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"import Modal from './Modal';\\n\\nconst App = () => {\\n  const [isOpen, setOpen] = useState(false);\\n\\n  const onClick = () => {\\n    setOpen(true);\\n  };\\n\\n  return (\\n    <div className=\\\"App\\\">\\n      <button onClick={onClick}>open Modal</button>\\n      <Modal isOpen={isOpen} />\\n    </div>\\n  );\\n};\\n\\nexport default App;\\n\")), \"\\n\", React.createElement(_components.p, null, \"필요한 컴포넌트 안에서 모달 컴포넌트를 랜더링 하면 된다.\"), \"\\n\", React.createElement(_components.p, null, \"하지만 이 방법은 모달이 언제나 최상위에 보여지는 것을 보장하지 못한다. 만약 자식 컴포넌트에서 모달 컴포넌트를 랜더링 한다면 이 모달 컴포넌트는 부모 컴포넌트 스타일의 영향을 받을 수 있기 때문이다.\"), \"\\n\", React.createElement(_components.p, null, \"이럴 때 사용하는 것이 \", React.createElement(_components.strong, null, \"potal\"), \"이다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://ko.reactjs.org/docs/portals.html\"\n  }, \"공식 홈페이지\"), \"에서는 potal에 대해 이렇게 설명한다.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Portal은 부모 컴포넌트의 DOM 계층 구조 바깥에 있는 DOM 노드로 자식을 렌더링 하는 최고의 방법을 제공합니다.\")), \"\\n\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.p, null, \"사용법은 간단하다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"ReactDOM.createPortal(child, container)\\n\")), \"\\n\", React.createElement(_components.p, null, \"첫 번째 인자 \", React.createElement(_components.strong, null, \"child는\"), \" 포탈을 사용해 계층 밖으로 보낼 대상이 되는 컴포넌트,\"), \"\\n\", React.createElement(_components.p, null, \"두 번째 인자는 \", React.createElement(_components.strong, null, \"container\"), \" 는 포탈로 이동할 목적지, 즉 child를 랜더링 할 DOM Element를 넣어준다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"modal-만들기\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#modal-%EB%A7%8C%EB%93%A4%EA%B8%B0\",\n    \"aria-label\": \"modal 만들기 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Modal 만들기\"), \"\\n\", React.createElement(_components.p, null, \"먼저 버튼을 누르면 모달창이 열리는 간단한 앱을 만들어보았다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"// components/Modal/Modal\\n\\nimport React from \\\"react\\\";\\nimport styled from \\\"styled-components\\\";\\nimport image from \\\"./assets/cat.png\\\";\\n\\nfunction Modal({ onClose }) {\\n  const handleClose = () => {\\n    onClose?.();\\n  };\\n  return (\\n      <Overlay>\\n        <ModalWrap>\\n          <CloseButton onClick={handleClose}>\\n            <i className=\\\"fa-solid fa-xmark\\\"></i>\\n          </CloseButton>\\n          <Contents>\\n            <img src={image} alt=\\\"smile\\\" />\\n            <h1>This is a Modal Dialog</h1>\\n            <Button onClick={handleClose}>Close</Button>\\n          </Contents>\\n        </ModalWrap>\\n      </Overlay>\\n  );\\n}\\n\\nconst Overlay = styled.div`\\n  position: fixed;\\n  width: 100%;\\n  height: 100%;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  background: rgba(0, 0, 0, 0.2);\\n  z-index: 9999;\\n`;\\n\\nconst ModalWrap = styled.div`\\n  width: 600px;\\n  height: fit-content;\\n  border-radius: 15px;\\n  background-color: #fff;\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n`;\\n\\nconst CloseButton = styled.div`\\n  float: right;\\n  width: 40px;\\n  height: 40px;\\n  margin: 20px;\\n  cursor: pointer;\\n  i {\\n    color: #5d5d5d;\\n    font-size: 30px;\\n  }\\n`;\\n\\nconst Contents = styled.div`\\n  margin: 50px 30px;\\n  h1 {\\n    font-size: 30px;\\n    font-weight: 600;\\n    margin-bottom: 60px;\\n  }\\n  img {\\n    margin-top: 60px;\\n    width: 300px;\\n  }\\n`;\\nconst Button = styled.button`\\n  font-size: 14px;\\n  padding: 10px 20px;\\n  border: none;\\n  background-color: #ababab;\\n  border-radius: 10px;\\n  color: white;\\n  font-style: italic;\\n  font-weight: 200;\\n  cursor: pointer;\\n  &:hover {\\n    background-color: #898989;\\n  }\\n`;\\nexport default Modal;\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"// App\\n\\nimport { useState } from \\\"react\\\";\\nimport styled from \\\"styled-components\\\";\\nimport Modal from \\\"./components/Modal\\\";\\n\\nfunction App() {\\n  const [isOpen, setIsOpen] = useState(false);\\n\\n  const onClickButton = () => {\\n    setIsOpen(true);\\n  };\\n\\n  return (\\n    <AppWrap>\\n      <Button onClick={onClickButton}>Click Me !</Button>\\n      {isOpen && (<Modal\\n        open={isOpen}\\n        onClose={() => {\\n          setIsOpen(false);\\n        }}\\n      />)}\\n    </AppWrap>\\n  );\\n}\\n\\nconst Button = styled.button`\\n  font-size: 14px;\\n  padding: 10px 20px;\\n  border: none;\\n  background-color: #fa9f98;\\n  border-radius: 10px;\\n  color: white;\\n  font-style: italic;\\n  font-weight: 200;\\n  cursor: pointer;\\n  &:hover {\\n    background-color: #fac2be;\\n  }\\n`;\\n\\nconst AppWrap = styled.div`\\n  text-align: center;\\n  margin: 50px auto;\\n`;\\nexport default App;\\n\")), \"\\n\", React.createElement(_components.img, {\n    src: \"https://blog.kakaocdn.net/dn/bWyMQ6/btrENfLxHB4/AFsTxIw8rbio7lQdp9Wkvk/img.gif\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"버튼을 누르면, 모달창이 나타난다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://blog.kakaocdn.net/dn/bSjWRo/btrEOH76Fx0/qOYsODc70FCYbRV5nSNC90/img.gif\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"코드를 보면, 모달창이 앱의 하위에 생성되는 것을 볼 수 있다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.p, null, \"이제 createPotal을 사용해 모달 컴포넌트를 이동시켜보자.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"createportal을-사용한-modal-만들기\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#createportal%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%9C-modal-%EB%A7%8C%EB%93%A4%EA%B8%B0\",\n    \"aria-label\": \"createportal을 사용한 modal 만들기 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"createPortal을 사용한 Modal 만들기\"), \"\\n\", React.createElement(_components.p, null, \"우선 모달 컴포넌트가 랜더링 될 DOM element를 \", React.createElement(_components.code, null, \"index.html\"), \"파일에 추가해준다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"<!DOCTYPE html>\\n<html lang=\\\"ko\\\">\\n  ...\\n  <body>\\n    <div id=\\\"root\\\"></div>\\n    <div id=\\\"modal\\\"></div>\\n  </body>\\n</html>\\n\")), \"\\n\", React.createElement(_components.p, null, \"만약 하나의 다이얼로그만을 사용하거나 앱을 사용하면서 모달창을 띄울 일이 많지 않다면 굳이 html파일에 modal요소를 생성해 놓을 필요는 없다.\"), \"\\n\", React.createElement(_components.p, null, \"하지만 대부분의 프로젝트에서는 다이얼로그를 비롯하여 alert이나 comform창을 띄울일이 빈번하기 때문에 modal 요소를 미리 생성해 두는 것이 좋다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"// components/Modal/ModalContainer\\n\\nimport React from \\\"react\\\";\\nimport { createPortal } from \\\"react-dom\\\";\\n\\nfunction ModalContainer({ children }) {\\n  return createPortal(<>{children}</>, document.getElementById(\\\"modal\\\"));\\n}\\n\\nexport default ModalContainer;\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"import React, { useEffect } from \\\"react\\\";\\nimport styled from \\\"styled-components\\\";\\nimport image from \\\"./assets/cat.png\\\";\\nimport ModalContainer from \\\"./ModalContainer\\\";\\n\\nfunction Modal({ onClose }) {\\n  const handleClose = () => {\\n    onClose?.();\\n  };\\n\\n  return (\\n    <ModalContainer>\\n      <Overlay>\\n        <ModalWrap>\\n          <CloseButton onClick={handleClose}>\\n            <i className=\\\"fa-solid fa-xmark\\\"></i>\\n          </CloseButton>\\n          <Contents>\\n            <img src={image} alt=\\\"smile\\\" />\\n            <h1>This is a Modal Dialog</h1>\\n            <Button onClick={handleClose}>Close</Button>\\n          </Contents>\\n        </ModalWrap>\\n      </Overlay>\\n    </ModalContainer>\\n  );\\n}\\n\\nexport default Modal;\\n\")), \"\\n\", React.createElement(_components.p, null, \"ModalContainer를 만들고 이전의 Modal 컴포넌트를 ModalContainer로 감싸준다.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FOWrbI%2FbtrENfkw4J3%2FY1GohmAt3HCOVLqm8mHSck%2Fimg.png\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.p, null, \"동작은 동일하지만 modal요소 하위에 컨테이너가 생성된 것을 볼 수 있다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"background-클릭-시-모달창-닫기\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#background-%ED%81%B4%EB%A6%AD-%EC%8B%9C-%EB%AA%A8%EB%8B%AC%EC%B0%BD-%EB%8B%AB%EA%B8%B0\",\n    \"aria-label\": \"background 클릭 시 모달창 닫기 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"background 클릭 시 모달창 닫기\"), \"\\n\", React.createElement(_components.p, null, \"모달창은 자신 이외의 기능을 제한하기 때문에, 사용자가 원할 때 손쉽게 모달창을 빠져나갈 수 있어야 한다.\"), \"\\n\", React.createElement(_components.p, null, \"이를 위해 자주 사용되는 방법은 모달창 오른쪽 위의 \", React.createElement(_components.code, null, \"X\"), \" 버튼, 하단의 \", React.createElement(_components.code, null, \"닫기\"), \" 버튼, 그리고 모달창의 바깥을 클릭하면 창을 닫히도록 만드는 것이다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.p, null, \"모달창의 바깥을 클릭하면 창이 닫히도록 구현해보자.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"import { useEffect } from \\\"react\\\";\\n\\nfunction useOutSideClick(ref, callback) {\\n  useEffect(() => {\\n    const handleClick = (event) => {\\n      if (ref.current && !ref.current.contains(event.target)) {\\n        callback?.();\\n      }\\n    };\\n\\n    window.addEventListener(\\\"mousedown\\\", handleClick);\\n\\n    return () => window.removeEventListener(\\\"mousedown\\\", handleClick);\\n  }, [ref, callback]);\\n}\\n\\nexport default useOutSideClick;\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"useOutSideClick\"), \" 이라는 커스텀 훅을 만들어준다.\"), \"\\n\", React.createElement(_components.p, null, \"이 훅은 \", React.createElement(_components.code, null, \"ref\"), \" 로 지정한 요소의 밖을 클릭 시 callback함수를 실행시켜준다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"import React, { useEffect, useRef } from \\\"react\\\";\\nimport styled from \\\"styled-components\\\";\\nimport useOutSideClick from \\\"../../hooks/useOutSideClick\\\";\\nimport image from \\\"../../assets/cat.png\\\";\\nimport ModalContainer from \\\"./ModalContainer\\\";\\n\\nfunction Modal({ onClose }) {\\n  const modalRef = useRef(null)\\n  const handleClose = () => {\\n    onClose?.();\\n  };\\n\\n  useOutSideClick(modalRef, handleClose);\\n\\n  return (\\n    <ModalContainer>\\n      <Overlay>\\n        <ModalWrap ref={modalRef}>\\n          ...\\n        </ModalWrap>\\n      </Overlay>\\n    </ModalContainer>\\n  );\\n}\\n\\nexport default Modal;\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"useRef\"), \" 를 사용해 \", React.createElement(_components.code, null, \"Modal\"), \" 컨테이너 요소를 담아주고 \", React.createElement(_components.code, null, \"Modal\"), \" 컨테이너의 외부를 클릭하면 \", React.createElement(_components.code, null, \"handleClose\"), \" 를 호출하도록 설정해주었다.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://blog.kakaocdn.net/dn/bAXo2C/btrENDrxKNE/cz7QyKuONacBb3nD6PAjK1/img.gif\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"외부-스크롤-막기\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EC%99%B8%EB%B6%80-%EC%8A%A4%ED%81%AC%EB%A1%A4-%EB%A7%89%EA%B8%B0\",\n    \"aria-label\": \"외부 스크롤 막기 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"외부 스크롤 막기\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://blog.kakaocdn.net/dn/VNO0j/btrENVrVHXB/wimr4EruwZRfrTyoncQZYk/img.gif\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"콘텐츠가 창의 크기를 오버하여 스크롤이 생성된 경우,\"), \"\\n\", React.createElement(_components.p, null, \"모달창이 나타나도 외부 스크롤은 여전히 동작하는 것을 볼 수 있다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"function Modal({ onClose }) {\\n\\n  const handleClose = () => {\\n    onClose?.();\\n  };\\n\\n  useEffect(() => {\\n    const $body = document.querySelector(\\\"body\\\");\\n    const overflow = $body.style.overflow;\\n    $body.style.overflow = \\\"hidden\\\";\\n    return () => {\\n    \\t$body.style.overflow = overflow\\n    };\\n  }, []);\\n\\n  return (\\n    <ModalContainer>\\n      <Overlay>\\n        <ModalWrap>\\n          <CloseButton onClick={handleClose}>\\n            <i className=\\\"fa-solid fa-xmark\\\"></i>\\n          </CloseButton>\\n          <Contents>\\n            <img src={image} alt=\\\"smile\\\" />\\n            <h1>This is a Modal Dialog</h1>\\n            <Button onClick={handleClose}>Close</Button>\\n          </Contents>\\n        </ModalWrap>\\n      </Overlay>\\n    </ModalContainer>\\n  );\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"모달 랜더링 시 body의 \", React.createElement(_components.code, null, \"overflow\"), \" 값을 \", React.createElement(_components.code, null, \"hidden\"), \" 으로 설정하여 스크롤을 막아주고,\"), \"\\n\", React.createElement(_components.p, null, \"모달이 닫히면 다시 스크롤이 생성되도록 설정해주었다.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://blog.kakaocdn.net/dn/I1Zk7/btrEM6HJ1Ud/mwo1C56SNHXuA5Zrz02ku1/img.gif\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"재사용-가능한-모달-컴포넌트로-바꾸기\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EC%9E%AC%EC%82%AC%EC%9A%A9-%EA%B0%80%EB%8A%A5%ED%95%9C-%EB%AA%A8%EB%8B%AC-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EB%A1%9C-%EB%B0%94%EA%BE%B8%EA%B8%B0\",\n    \"aria-label\": \"재사용 가능한 모달 컴포넌트로 바꾸기 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"재사용 가능한 모달 컴포넌트로 바꾸기\"), \"\\n\", React.createElement(_components.p, null, \"보통 모달창은 안의 내용만 상이할 뿐, 기본 UI나 기능은 동일하다. 따라서 프로젝트에서 사용할 모달의 틀을 만들어서 재사용하는것이 훨씬 효율적이다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"import React, { useEffect, useRef } from \\\"react\\\";\\nimport styled from \\\"styled-components\\\";\\nimport useOutSideClick from \\\"../../hooks/useOutSideClick\\\";\\nimport ModalContainer from \\\"./ModalContainer\\\";\\n\\nfunction Modal({ onClose, children }) {\\n  const modalRef = useRef(null);\\n  const handleClose = () => {\\n    onClose?.();\\n  };\\n\\n  useOutSideClick(modalRef, handleClose);\\n  useEffect(() => {\\n    const $body = document.querySelector(\\\"body\\\");\\n    $body.style.overflow = \\\"hidden\\\";\\n    return () => ($body.style.overflow = \\\"auto\\\");\\n  }, []);\\n  return (\\n    <ModalContainer>\\n      <Overlay>\\n        <ModalWrap ref={modalRef}>\\n          <CloseButton onClick={handleClose}>\\n            <i className=\\\"fa-solid fa-xmark\\\"></i>\\n          </CloseButton>\\n          <Contents>{children}</Contents>\\n        </ModalWrap>\\n      </Overlay>\\n    </ModalContainer>\\n  );\\n}\\n\\nexport default Modal;\\n\")), \"\\n\", React.createElement(_components.p, null, \"Contents 안에 들어있던 내용을 지우고 \", React.createElement(_components.code, null, \"children\"), \" 을 받아서 랜더링 하도록 바꿔주었다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"import React from \\\"react\\\";\\nimport Modal from \\\"./Modal\\\";\\nimport styled from \\\"styled-components\\\";\\nimport image from \\\"../../assets/cat.png\\\";\\n\\nfunction FirstModal({ onClose }) {\\n  return (\\n    <Modal onClose={onClose}>\\n      <img src={image} alt=\\\"smile\\\" />\\n      <h1>This is a Modal Dialog</h1>\\n      <Button onClick={onClose}>Close</Button>\\n    </Modal>\\n  );\\n}\\n\\n...\\n\\nexport default SampleModal;\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"import React from \\\"react\\\";\\nimport Modal from \\\"./Modal\\\";\\nimport styled from \\\"styled-components\\\";\\n\\nfunction SecondModal({ onClose }) {\\n  return (\\n    <Modal onClose={onClose}>\\n      <TextWrap>\\n        <h2> Hello !</h2>\\n        <p>\\n          ...\\n        </p>\\n      </TextWrap>\\n    </Modal>\\n  );\\n}\\n\\nexport default SecondModal;\\n\")), \"\\n\", React.createElement(_components.p, null, \"위와 같이 \", React.createElement(_components.code, null, \"Modal\"), \" 안에 내용을 작성해 보다 간편하게 모달창을 생성할 수 있다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"import { useState } from \\\"react\\\";\\nimport styled from \\\"styled-components\\\";\\nimport FirstModal from \\\"./components/Modal/FirstModal\\\";\\nimport SecondModal from \\\"./components/Modal/SecondModal\\\";\\n\\nfunction App() {\\n  const [isOpen1, setIsOpen1] = useState(false);\\n  const [isOpen2, setIsOpen2] = useState(false);\\n\\n  const onClickButton1 = () => {\\n    setIsOpen1(true);\\n  };\\n\\n  const onClickButton2 = () => {\\n    setIsOpen2(true);\\n  };\\n\\n  return (\\n    <AppWrap>\\n      <Button onClick={onClickButton1}>Click Me !</Button>\\n      <Button className=\\\"blue\\\" onClick={onClickButton2}>\\n        Click Me !\\n      </Button>\\n      {isOpen1 && (\\n        <FirstModal\\n          onClose={() => {\\n            setIsOpen1(false);\\n          }}\\n        />\\n      )}\\n      {isOpen2 && (\\n        <SecondModal\\n          onClose={() => {\\n            setIsOpen2(false);\\n          }}\\n        />\\n      )}\\n      ...\\n    </AppWrap>\\n  );\\n}\\n\\nexport default App;\\n\")), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.p, null, \"만든 두 개의 모달창을 \", React.createElement(_components.code, null, \"App\"), \" 컴포넌트에 랜더링 해주었다.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://blog.kakaocdn.net/dn/dnYksy/btrEOHAiUrE/cAneeQn50oi8f2AggkVKg0/img.gif\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"생각한 대로 잘 동작하는 것을 확인할 수 있다!\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.p, null, \"하지만 이렇게 한 컴포넌트에 여러 개의 모달을 띄우는 코드를 보면 의문이 들게 된다.\\n만약 한 컴포넌트에 5개의 모달을 띄워야 한다면, \", React.createElement(_components.code, null, \"isOpen\"), \" state를 5개 설정해줘야 하는 걸까? 이게 최선의 코드일까?\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.p, null, \"이제 우리는 모달을 열고 닫는 상태를 호출한 컴포넌트 내에서 관리하는 것이 아닌, 전역으로 관리하도록 코드를 바꿔야 한다.\"), \"\\n\", React.createElement(_components.p, null, \"여러 개의 모달을 효과적으로 관리하는 방법에 대해서는 다음 포스팅에서 다뤄보도록 하겠다.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/ego/Documents/go/ego-blog/content/blog/REACT/create-modal-using-portal.mdx\";\nimport * as React from \"react\";\nimport {Link, graphql} from \"gatsby\";\nimport {HiChevronRight} from \"@react-icons/all-files/hi/HiChevronRight\";\nimport {HiChevronLeft} from \"@react-icons/all-files/hi/HiChevronLeft\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport {Tag, TagBox} from \"../components/Tag\";\nimport {CodeBlock} from \"../components/Block/CodeBlock\";\nimport Comment from \"../components/Post/Comment\";\nimport TableOfContents from \"../components/TableOfContents/TableOfContents\";\nconst components = {\n  img: ({src, alt}) => React.createElement(\"img\", {\n    src: src,\n    alt: alt,\n    className: \"m-auto md:w-3/4\"\n  }),\n  pre: CodeBlock,\n  code: props => React.createElement(\"code\", Object.assign({}, props, {\n    className: \"bg-background-primary text-accent-default bg-opacity-70\"\n  }))\n};\nconst BlogPostTemplate = ({data: {previous, next, site, mdx: post}, location, children}) => {\n  const siteTitle = site.siteMetadata?.title || `Title`;\n  return React.createElement(Layout, {\n    location: location,\n    title: siteTitle\n  }, React.createElement(\"article\", {\n    className: \"blog-post px-8 pt-10\",\n    itemScope: true,\n    itemType: \"http://schema.org/Article\"\n  }, React.createElement(\"header\", {\n    className: \"text-center py-14\"\n  }, React.createElement(\"h1\", {\n    itemProp: \"headline\"\n  }, post.frontmatter.title), React.createElement(\"p\", {\n    className: \"text-accent-default text-xs mt-8\"\n  }, post.frontmatter.date)), React.createElement(\"section\", {\n    className: \"h-fit my-28 text-text-default\",\n    itemProp: \"articleBody\"\n  }, React.createElement(MDXProvider, {\n    components: components\n  }, children)), React.createElement(TagBox, null, post.frontmatter.tags.map(tag => React.createElement(Tag, {\n    key: tag,\n    text: tag\n  }))), React.createElement(\"hr\", {\n    className: \"my-10\"\n  }), React.createElement(Comment), React.createElement(\"footer\")), React.createElement(\"nav\", {\n    className: \"blog-post-nav px-8 mt-8\"\n  }, React.createElement(\"ul\", {\n    className: \"flex flex-wrap justify-between list-none p-0 text-text-default\"\n  }, previous ? React.createElement(Link, {\n    to: previous.fields.slug,\n    rel: \"prev\"\n  }, React.createElement(\"li\", {\n    className: \"bg-background-primary/50 text-sm p-3 rounded-xl h-fit flex items-center gap-3\"\n  }, React.createElement(HiChevronLeft, {\n    size: 22,\n    className: \"text-accent-default\"\n  }), React.createElement(\"p\", {\n    className: \"max-w-[28rem]\"\n  }, previous.frontmatter.title))) : React.createElement(\"div\"), next && React.createElement(Link, {\n    to: next.fields.slug,\n    rel: \"next\"\n  }, React.createElement(\"li\", {\n    className: \"bg-background-primary/50 text-sm p-3 rounded-xl h-fit flex items-center gap-3\"\n  }, React.createElement(\"p\", {\n    className: \"max-w-[28rem]\"\n  }, next.frontmatter.title), React.createElement(HiChevronRight, {\n    size: 22,\n    className: \"text-accent-default\"\n  }))))), React.createElement(TableOfContents, {\n    contents: post.tableOfContents\n  }));\n};\nexport const Head = ({data: {mdx: post}}) => {\n  return React.createElement(Seo, {\n    title: post.frontmatter.title,\n    description: post.frontmatter.description || post.excerpt\n  });\n};\nBlogPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    mdx(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      tableOfContents\n      frontmatter {\n        title\n        date(formatString: \"YYYY.MM.DD\")\n        description\n        tags\n      }\n    }\n    previous: mdx(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: mdx(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","strong","pre","code","a","blockquote","h1","span","img","_provideComponents","components","React","href","id","style","position","className","dangerouslySetInnerHTML","__html","src","alt","wrapper","MDXLayout","_ref","CodeBlock","BlogPostTemplate","_ref2","_site$siteMetadata","data","previous","next","site","mdx","post","location","children","siteTitle","siteMetadata","title","Layout","itemScope","itemType","itemProp","frontmatter","date","MDXProvider","TagBox","tags","map","tag","Tag","key","text","Comment","Link","to","fields","slug","rel","HiChevronLeft","size","HiChevronRight","TableOfContents","contents","tableOfContents","Head","_ref3","Seo","description","excerpt","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}