{"version":3,"file":"component---src-templates-blog-post-js-content-file-path-content-blog-react-how-does-react-query-work-mdx-9a0f79d3d5aef383c373.js","mappings":"iNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,KAAM,OACNC,EAAG,IACHC,KAAM,OACNC,IAAK,MACLC,GAAI,KACJC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,MAAsBb,EAAMc,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBd,EAAYG,GAAI,CACnFY,GAAI,cACJC,MAAO,CACLC,SAAU,aAEXH,EAAAA,cAAoBd,EAAYI,EAAG,CACpCc,KAAM,eACN,aAAc,wBACdC,UAAW,iBACVL,EAAAA,cAAoBd,EAAYK,KAAM,CACvCe,wBAAyB,CACvBC,OAAQ,meAEP,eAAgB,KAAMP,EAAAA,cAAoBd,EAAYM,EAAG,KAAM,kDAAmDQ,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,uBAAwB,sBAAuB,KAAMO,EAAAA,cAAoBd,EAAYQ,IAAK,KAAMM,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,kRAAmR,KAAMO,EAAAA,cAAoBd,EAAYM,EAAG,KAAM,cAAeQ,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,eAAgB,eAAgBO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,uBAAwB,mBAAoBO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,eAAgB,mBAAoB,KAAMO,EAAAA,cAAoBd,EAAYM,EAAG,KAAM,KAAMQ,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,eAAgB,gBAAiBO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,cAAe,KAAMO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,iBAAkB,8BAA+BO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,cAAe,aAAcO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,eAAgB,QAASO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,cAAe,KAAMO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,iBAAkB,WAAY,KAAMO,EAAAA,cAAoB,MAAO,CAC58CQ,IAAK,+JACLC,MAAO,MACPJ,UAAW,WACT,KAAML,EAAAA,cAAoBd,EAAYM,EAAG,KAAMQ,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,uBAAwB,YAAaO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,eAAgB,eAAgBO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,kBAAmB,WAAY,KAAMO,EAAAA,cAAoBd,EAAYQ,IAAK,KAAMM,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,4CAA6C,KAAMO,EAAAA,cAAoB,MAAO,KAAMA,EAAAA,cAAoBd,EAAYM,EAAG,KAAM,WAAYQ,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,eAAgB,OAAQO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,WAAY,yBAA0B,KAAMO,EAAAA,cAAoB,MAAO,CACtrBQ,IAAK,+JACLC,MAAO,MACPJ,UAAW,WACT,KAAML,EAAAA,cAAoBd,EAAYQ,IAAK,KAAMM,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,0HAA2H,KAAMO,EAAAA,cAAoBd,EAAYM,EAAG,KAAM,YAAaQ,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,eAAgB,cAAeO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,iBAAkB,0CAA2C,KAAMO,EAAAA,cAAoB,MAAO,CAC3eQ,IAAK,+JACLC,MAAO,MACPJ,UAAW,WACT,KAAML,EAAAA,cAAoB,MAAO,KAAMA,EAAAA,cAAoB,MAAO,KAAMA,EAAAA,cAAoBd,EAAYG,GAAI,CAC9GY,GAAI,aACJC,MAAO,CACLC,SAAU,aAEXH,EAAAA,cAAoBd,EAAYI,EAAG,CACpCc,KAAM,cACN,aAAc,uBACdC,UAAW,iBACVL,EAAAA,cAAoBd,EAAYK,KAAM,CACvCe,wBAAyB,CACvBC,OAAQ,meAEP,cAAe,KAAMP,EAAAA,cAAoBd,EAAYM,EAAG,KAAM,WAAYQ,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,eAAgB,4BAA6B,KAAMO,EAAAA,cAAoB,MAAO,CACvMQ,IAAK,+JACLC,MAAO,MACPJ,UAAW,WACT,KAAML,EAAAA,cAAoBd,EAAYM,EAAG,KAAMQ,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,cAAe,qBAAsB,KAAMO,EAAAA,cAAoBd,EAAYQ,IAAK,KAAMM,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,2aAA4a,KAAMO,EAAAA,cAAoBd,EAAYM,EAAG,KAAM,oBAAqBQ,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,aAAc,sCAAuC,KAAMO,EAAAA,cAAoBd,EAAYM,EAAG,KAAM,OAAQQ,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,WAAY,6BAA8B,KAAMO,EAAAA,cAAoB,MAAO,CAC99BQ,IAAK,8JACLC,MAAO,MACPJ,UAAW,WACT,KAAML,EAAAA,cAAoBd,EAAYM,EAAG,KAAM,OAAQQ,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,aAAc,gCAAiC,KAAMO,EAAAA,cAAoBd,EAAYQ,IAAK,KAAMM,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,kaAAma,KAAMO,EAAAA,cAAoB,MAAO,CACrrBQ,IAAK,+JACLC,MAAO,MACPJ,UAAW,WACT,KAAML,EAAAA,cAAoBd,EAAYM,EAAG,KAAM,uDAAwD,KAAMQ,EAAAA,cAAoB,MAAO,KAAMA,EAAAA,cAAoB,MAAO,KAAMA,EAAAA,cAAoBd,EAAYG,GAAI,CACrNY,GAAI,QACJC,MAAO,CACLC,SAAU,aAEXH,EAAAA,cAAoBd,EAAYI,EAAG,CACpCc,KAAM,SACN,aAAc,kBACdC,UAAW,iBACVL,EAAAA,cAAoBd,EAAYK,KAAM,CACvCe,wBAAyB,CACvBC,OAAQ,meAEP,SAAU,KAAMP,EAAAA,cAAoBd,EAAYM,EAAG,KAAMQ,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,cAAe,8CAA+C,KAAMO,EAAAA,cAAoB,MAAO,CACvMQ,IAAK,8JACLC,MAAO,MACPJ,UAAW,WACT,KAAML,EAAAA,cAAoBd,EAAYM,EAAG,KAAMQ,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,SAAU,aAAcO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,cAAe,gBAAiBO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,aAAc,kBAAmB,KAAMO,EAAAA,cAAoBd,EAAYM,EAAG,KAAM,KAAMQ,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,aAAc,MAAOO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,iBAAkB,UAAWO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,SAAU,KAAMO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,YAAa,yBAA0BO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,YAAa,0BAA2B,KAAMO,EAAAA,cAAoB,MAAO,KAAMA,EAAAA,cAAoB,MAAO,KAAMA,EAAAA,cAAoBd,EAAYG,GAAI,CAC5xBY,GAAI,gBACJC,MAAO,CACLC,SAAU,aAEXH,EAAAA,cAAoBd,EAAYI,EAAG,CACpCc,KAAM,iBACN,aAAc,0BACdC,UAAW,iBACVL,EAAAA,cAAoBd,EAAYK,KAAM,CACvCe,wBAAyB,CACvBC,OAAQ,meAEP,iBAAkB,KAAMP,EAAAA,cAAoBd,EAAYM,EAAG,KAAMQ,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,gBAAiB,IAAKO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,YAAa,aAAcO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,YAAa,QAASO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,SAAU,iBAAkB,KAAMO,EAAAA,cAAoB,MAAO,CACxXQ,IAAK,+JACLC,MAAO,MACPJ,UAAW,WACT,KAAML,EAAAA,cAAoB,MAAO,CACnCQ,IAAK,8JACLC,MAAO,MACPJ,UAAW,WACT,KAAML,EAAAA,cAAoBd,EAAYM,EAAG,KAAM,+EAAgF,KAAMQ,EAAAA,cAAoB,MAAO,KAAMA,EAAAA,cAAoB,MAAO,KAAMA,EAAAA,cAAoBd,EAAYG,GAAI,CAC7OY,GAAI,uBACJC,MAAO,CACLC,SAAU,aAEXH,EAAAA,cAAoBd,EAAYI,EAAG,CACpCc,KAAM,wFACN,aAAc,iCACdC,UAAW,iBACVL,EAAAA,cAAoBd,EAAYK,KAAM,CACvCe,wBAAyB,CACvBC,OAAQ,meAEP,wBAAyB,KAAMP,EAAAA,cAAoBd,EAAYM,EAAG,KAAMQ,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,YAAa,UAAWO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,cAAe,0BAA2B,KAAMO,EAAAA,cAAoBd,EAAYM,EAAG,KAAMQ,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,YAAa,WAAYO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,cAAe,0BAA2BO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,gBAAiB,uDAAwDO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,gBAAiB,uBAAwB,KAAMO,EAAAA,cAAoB,MAAO,KAAMA,EAAAA,cAAoBd,EAAYM,EAAG,KAAMQ,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,gBAAiB,eAAgB,KAAMO,EAAAA,cAAoBd,EAAYQ,IAAK,KAAMM,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,gnBAAinB,KAAMO,EAAAA,cAAoB,MAAO,KAAMA,EAAAA,cAAoBd,EAAYQ,IAAK,KAAMM,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,6FAA8F,KAAMO,EAAAA,cAAoBd,EAAYM,EAAG,KAAMQ,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,gBAAiB,qBAAsBO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,eAAgB,kBAAmB,KAAMO,EAAAA,cAAoB,MAAO,KAAMA,EAAAA,cAAoB,MAAO,KAAMA,EAAAA,cAAoBd,EAAYS,GAAI,CAC7/DM,GAAI,cACJC,MAAO,CACLC,SAAU,aAEXH,EAAAA,cAAoBd,EAAYI,EAAG,CACpCc,KAAM,+BACN,aAAc,wBACdC,UAAW,iBACVL,EAAAA,cAAoBd,EAAYK,KAAM,CACvCe,wBAAyB,CACvBC,OAAQ,meAEP,eAAgB,KAAMP,EAAAA,cAAoBd,EAAYQ,IAAK,KAAMM,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,mNAAoN,KAAMO,EAAAA,cAAoBd,EAAYM,EAAG,KAAM,QAASQ,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,YAAa,mBAAoBO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,eAAgB,KAAMO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,gBAAiB,QAASO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,OAAQ,sBAAuBO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,YAAa,MAAOO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,YAAa,iBAAkBO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,YAAa,eAAgBO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,WAAY,aAAc,KAAMO,EAAAA,cAAoBd,EAAYQ,IAAK,KAAMM,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,6YAA8Y,KAAMO,EAAAA,cAAoBd,EAAYM,EAAG,KAAMQ,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,YAAa,WAAYO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,cAAe,WAAY,KAAMO,EAAAA,cAAoBd,EAAYQ,IAAK,KAAMM,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,2aAA4a,KAAMO,EAAAA,cAAoBd,EAAYM,EAAG,KAAMQ,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,cAAe,MAAOO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,eAAgB,MAAOO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,gBAAiB,gBAAiBO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,eAAgB,oBAAqB,KAAMO,EAAAA,cAAoBd,EAAYQ,IAAK,KAAMM,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,8jBAA+jB,KAAMO,EAAAA,cAAoBd,EAAYM,EAAG,KAAM,mBAAoBQ,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,WAAY,QAASO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,SAAU,QAASO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,cAAe,cAAeO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,SAAU,wCAAyC,KAAMO,EAAAA,cAAoBd,EAAYM,EAAG,KAAM,yBAA0BQ,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,SAAU,2BAA4B,KAAMO,EAAAA,cAAoB,MAAO,KAAMA,EAAAA,cAAoB,MAAO,KAAMA,EAAAA,cAAoBd,EAAYS,GAAI,CACvsHM,GAAI,WACJC,MAAO,CACLC,SAAU,aAEXH,EAAAA,cAAoBd,EAAYI,EAAG,CACpCc,KAAM,4BACN,aAAc,qBACdC,UAAW,iBACVL,EAAAA,cAAoBd,EAAYK,KAAM,CACvCe,wBAAyB,CACvBC,OAAQ,meAEP,YAAa,KAAMP,EAAAA,cAAoBd,EAAYM,EAAG,KAAMQ,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,gEAAiE,gBAAiB,KAAMO,EAAAA,cAAoBd,EAAYQ,IAAK,KAAMM,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,6zBAA8zB,KAAMO,EAAAA,cAAoBd,EAAYM,EAAG,KAAMQ,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,SAAU,UAAWO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,cAAe,MAAOO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,SAAU,gBAAiB,KAAMO,EAAAA,cAAoBd,EAAYU,GAAI,KAAM,KAAMI,EAAAA,cAAoBd,EAAYW,GAAI,KAAMG,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,YAAa,kBAAmBO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,aAAc,SAAU,KAAMO,EAAAA,cAAoBd,EAAYW,GAAI,KAAMG,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,cAAe,kBAAmBO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,SAAU,YAAa,KAAMO,EAAAA,cAAoBd,EAAYW,GAAI,KAAM,WAAYG,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,SAAU,OAAQ,MAAO,KAAMO,EAAAA,cAAoBd,EAAYM,EAAG,KAAM,MAAOQ,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,SAAU,UAAWO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,SAAU,eAAgB,KAAMO,EAAAA,cAAoBd,EAAYM,EAAG,KAAM,OAAQQ,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,SAAU,gBAAiB,KAAMO,EAAAA,cAAoB,MAAO,KAAMA,EAAAA,cAAoBd,EAAYM,EAAG,KAAM,MAAOQ,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,eAAgB,eAAgBO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,SAAU,WAAYO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,SAAU,kBAAmB,KAAMO,EAAAA,cAAoBd,EAAYM,EAAG,KAAM,KAAMQ,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,SAAU,SAAUO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,YAAa,iBAAkBO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,eAAgB,cAAeO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,SAAU,cAAeO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,SAAU,kBAAmB,KAAMO,EAAAA,cAAoBd,EAAYQ,IAAK,KAAMM,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,mQAAoQ,KAAMO,EAAAA,cAAoB,MAAO,KAAMA,EAAAA,cAAoBd,EAAYM,EAAG,KAAM,OAAQQ,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,UAAW,iBAAkB,KAAMO,EAAAA,cAAoBd,EAAYQ,IAAK,KAAMM,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,0FAA2F,KAAMO,EAAAA,cAAoBd,EAAYQ,IAAK,KAAMM,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,wWAAyW,KAAMO,EAAAA,cAAoBd,EAAYM,EAAG,KAAM,gBAAiBQ,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,yEAA0E,KAAMO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,WAAY,UAAWO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,SAAU,eAAgBO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,SAAU,cAAe,KAAMO,EAAAA,cAAoBd,EAAYM,EAAG,KAAMQ,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,gBAAiB,+BAAgCO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,SAAU,iBAAkBO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,aAAc,KAAMO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,WAAY,KAAMO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,UAAW,oBAAqB,KAAMO,EAAAA,cAAoBd,EAAYQ,IAAK,KAAMM,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,wjDAAyjD,KAAMO,EAAAA,cAAoB,MAAO,KAAMA,EAAAA,cAAoB,MAAO,KAAMA,EAAAA,cAAoBd,EAAYS,GAAI,CAC/iNM,GAAI,SACJC,MAAO,CACLC,SAAU,aAEXH,EAAAA,cAAoBd,EAAYI,EAAG,CACpCc,KAAM,kDACN,aAAc,mBACdC,UAAW,iBACVL,EAAAA,cAAoBd,EAAYK,KAAM,CACvCe,wBAAyB,CACvBC,OAAQ,meAEP,UAAW,KAAMP,EAAAA,cAAoBd,EAAYM,EAAG,KAAM,eAAgB,KAAMQ,EAAAA,cAAoBd,EAAYQ,IAAK,KAAMM,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,qKAAsK,KAAMO,EAAAA,cAAoBd,EAAYM,EAAG,KAAM,SAAUQ,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,uBAAwB,MAAOO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,aAAc,0EAA2E,KAAMO,EAAAA,cAAoBd,EAAYQ,IAAK,KAAMM,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,giBAAiiB,KAAMO,EAAAA,cAAoBd,EAAYM,EAAG,KAAM,uBAAwBQ,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,wBAAyB,yBAA0BO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,gBAAiB,eAAgBO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,gBAAiB,kCAAmCO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,uBAAwB,KAAMO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,SAAU,6DAA8D,KAAMO,EAAAA,cAAoBd,EAAYM,EAAG,KAAMQ,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,YAAa,YAAaO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,YAAa,UAAWO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,SAAU,WAAYO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,SAAU,KAAMO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,UAAW,yBAA0B,KAAMO,EAAAA,cAAoBd,EAAYM,EAAG,KAAM,OAAQQ,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,SAAU,SAAUO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,YAAa,0BAA2BO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,SAAU,cAAeO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,YAAa,wBAAyB,KAAMO,EAAAA,cAAoB,MAAO,KAAMA,EAAAA,cAAoBd,EAAYM,EAAG,KAAM,QAASQ,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,YAAa,KAAMO,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,SAAU,mBAAoB,KAAMO,EAAAA,cAAoBd,EAAYQ,IAAK,KAAMM,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,6VAA8V,KAAMO,EAAAA,cAAoBd,EAAYM,EAAG,KAAM,gBAAiBQ,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,wBAAyB,qCAAsC,KAAMO,EAAAA,cAAoBd,EAAYM,EAAG,KAAM,oCAAqCQ,EAAAA,cAAoBd,EAAYO,KAAM,KAAM,wBAAyB,0BAA2B,KAAMO,EAAAA,cAAoB,MAAO,KAAMA,EAAAA,cAAoB,MAAO,KAAMA,EAAAA,cAAoBd,EAAYG,GAAI,CAC1jHY,GAAI,MACJC,MAAO,CACLC,SAAU,aAEXH,EAAAA,cAAoBd,EAAYI,EAAG,CACpCc,KAAM,uBACN,aAAc,gBACdC,UAAW,iBACVL,EAAAA,cAAoBd,EAAYK,KAAM,CACvCe,wBAAyB,CACvBC,OAAQ,meAEP,SAAU,KAAMP,EAAAA,cAAoBd,EAAYM,EAAG,KAAMQ,EAAAA,cAAoBd,EAAYI,EAAG,CAC/Fc,KAAM,wFACL,yFAA0F,KAAMJ,EAAAA,cAAoBd,EAAYM,EAAG,KAAM,IAAKQ,EAAAA,cAAoBd,EAAYI,EAAG,CAClLc,KAAM,wFACL,4BAA6B,KAAMJ,EAAAA,cAAoBd,EAAYM,EAAG,KAAMQ,EAAAA,cAAoBd,EAAYI,EAAG,CAChHc,KAAM,6CACL,8CAA+C,KAAMJ,EAAAA,cAAoBd,EAAYM,EAAG,KAAM,IAAKQ,EAAAA,cAAoBd,EAAYI,EAAG,CACvIc,KAAM,6CACL,uBACL,CAKA,MAJA,SAAoBnB,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOyB,QAASC,GAAaxB,OAAOC,OAAO,CAAC,GAAGU,EAAAA,EAAAA,MAAsBb,EAAMc,YAC3E,OAAOY,EAAYX,EAAAA,cAAoBW,EAAW1B,EAAOe,EAAAA,cAAoBhB,EAAmBC,IAAUD,EAAkBC,EAC9H,E,wFCzKA,MAAMc,EAAa,CACjBa,IAAKC,IAAA,IAAC,IAACL,EAAG,IAAEM,GAAID,EAAA,OAAKb,EAAAA,cAAoB,MAAO,CAC9CQ,IAAKA,EACLM,IAAKA,EACLT,UAAW,mBACX,EACFX,IAAKqB,EAAAA,EACLtB,KAAMR,GAASe,EAAAA,cAAoB,OAAQb,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAClEoB,UAAW,8DAGTW,EAAmBC,IAAmE,IAAAC,EAAA,IAAjEC,MAAM,SAACC,EAAQ,KAAEC,EAAI,KAAEC,EAAMC,IAAKC,GAAK,SAAEC,EAAQ,SAAEC,GAAST,EACrF,MAAMU,GAA6B,QAAjBT,EAAAI,EAAKM,oBAAY,IAAAV,OAAA,EAAjBA,EAAmBW,QAAU,QAC/C,OAAO7B,EAAAA,cAAoB8B,EAAAA,EAAQ,CACjCL,SAAUA,EACVI,MAAOF,GACN3B,EAAAA,cAAoB,UAAW,CAChCK,UAAW,uBACX0B,WAAW,EACXC,SAAU,6BACThC,EAAAA,cAAoB,SAAU,CAC/BK,UAAW,qBACVL,EAAAA,cAAoB,KAAM,CAC3BiC,SAAU,YACTT,EAAKU,YAAYL,OAAQ7B,EAAAA,cAAoB,IAAK,CACnDK,UAAW,oCACVmB,EAAKU,YAAYC,OAAQnC,EAAAA,cAAoB,UAAW,CACzDK,UAAW,gCACX4B,SAAU,eACTjC,EAAAA,cAAoBoC,EAAAA,GAAa,CAClCrC,WAAYA,GACX2B,IAAY1B,EAAAA,cAAoBqC,EAAAA,EAAQ,KAAMb,EAAKU,YAAYI,KAAKC,KAAIC,GAAOxC,EAAAA,cAAoByC,EAAAA,EAAK,CACzGC,IAAKF,EACLG,KAAMH,OACFxC,EAAAA,cAAoB,KAAM,CAC9BK,UAAW,UACTL,EAAAA,cAAoB4C,EAAAA,GAAU5C,EAAAA,cAAoB,WAAYA,EAAAA,cAAoB,MAAO,CAC3FK,UAAW,2BACVL,EAAAA,cAAoB,KAAM,CAC3BK,UAAW,kEACVe,EAAWpB,EAAAA,cAAoB6C,EAAAA,KAAM,CACtCC,GAAI1B,EAAS2B,OAAOC,KACpBC,IAAK,QACJjD,EAAAA,cAAoB,KAAM,CAC3BK,UAAW,iFACVL,EAAAA,cAAoBkD,EAAAA,EAAe,CACpCC,KAAM,GACN9C,UAAW,wBACTL,EAAAA,cAAoB,IAAK,CAC3BK,UAAW,iBACVe,EAASc,YAAYL,SAAW7B,EAAAA,cAAoB,OAAQqB,GAAQrB,EAAAA,cAAoB6C,EAAAA,KAAM,CAC/FC,GAAIzB,EAAK0B,OAAOC,KAChBC,IAAK,QACJjD,EAAAA,cAAoB,KAAM,CAC3BK,UAAW,iFACVL,EAAAA,cAAoB,IAAK,CAC1BK,UAAW,iBACVgB,EAAKa,YAAYL,OAAQ7B,EAAAA,cAAoBoD,EAAAA,EAAgB,CAC9DD,KAAM,GACN9C,UAAW,4BACLL,EAAAA,cAAoBqD,EAAAA,EAAiB,CAC3CC,SAAU9B,EAAK+B,kBACd,EAEQC,EAAOC,IAAyB,IAAvBtC,MAAOI,IAAKC,IAAMiC,EACtC,OAAOzD,EAAAA,cAAoB0D,EAAAA,EAAK,CAC9B7B,MAAOL,EAAKU,YAAYL,MACxB8B,YAAanC,EAAKU,YAAYyB,aAAenC,EAAKoC,SAClD,EAGW,SAASC,EAAiB5E,GACvC,OAAOe,EAAAA,cAAoBgB,EAAkB/B,EAAOe,EAAAA,cAAoB8D,EAAqB7E,GAC/F,C","sources":["webpack://leego.dev.log/./content/blog/REACT/how-does-react-query-work.mdx","webpack://leego.dev.log/./src/templates/blog-post.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    a: \"a\",\n    span: \"span\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\",\n    h2: \"h2\",\n    ol: \"ol\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, {\n    id: \"queryclient\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#queryclient\",\n    \"aria-label\": \"queryclient permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"QueryClient\"), \"\\n\", React.createElement(_components.p, null, \"react-query를 프로젝트에 셋팅할 때, 가장 먼저 하는 것은 앱의 최상위에서 \", React.createElement(_components.code, null, \"QueryClientProvider\"), \"로 우리의 앱을 감싸주는 일이다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"import { QueryClient, QueryClientProvider } from '@tanstack/react-query';\\n...\\n\\nconst queryClient = new QueryClient();\\n\\nfunction Root() {\\n  return (\\n        <QueryClientProvider client={queryClient}>\\n            <App />\\n        </QueryClientProvider>\\n  );\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"우리는 먼저 새로운 \", React.createElement(_components.code, null, \"QueryClient\"), \"인스턴스를 생성하고, \", React.createElement(_components.code, null, \"QueryClientProvider\"), \"를 통해 앱 전체에서 생성한 \", React.createElement(_components.code, null, \"QueryClient\"), \"에 접근 가능하도록 해준다.\"), \"\\n\", React.createElement(_components.p, null, \"이 \", React.createElement(_components.code, null, \"QueryClient\"), \"는 단순하게 표현하자면 \", React.createElement(_components.code, null, \"QueryCache\"), \"와 \", React.createElement(_components.code, null, \"MutationCache\"), \"를 담는 그릇이다. 우리는 대부분의 경우에 직접 \", React.createElement(_components.code, null, \"QueryCache\"), \"에 접근하기보다, \", React.createElement(_components.code, null, \"QueryClient\"), \"를 통해 \", React.createElement(_components.code, null, \"QueryCache\"), \"와 \", React.createElement(_components.code, null, \"MutationCache\"), \"에 접근한다.\"), \"\\n\", React.createElement(\"img\", {\n    src: \"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FceNUPV%2Fbtsak9GTTBJ%2Fkayd2JfAISPXslo0C568U1%2Fimg.jpg\",\n    width: \"282\",\n    className: \"m-auto\"\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"QueryClientProvider\"), \"를 통해 내려준 \", React.createElement(_components.code, null, \"queryClient\"), \"에 접근하기 위해서는 \", React.createElement(_components.code, null, \"useQueryClient\"), \"를 사용한다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"const queryClient = useQueryClient();\\n\")), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.p, null, \"이렇게 가져온 \", React.createElement(_components.code, null, \"queryClient\"), \"객체를 \", React.createElement(_components.code, null, \"console\"), \"에 찍어보면 내부 구조를 볼 수 있다.\"), \"\\n\", React.createElement(\"img\", {\n    src: \"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FblQGgn%2FbtsayVgIboL%2Ft8Yzl5dYc2Q3smuFcsTIL0%2Fimg.png\",\n    width: \"695\",\n    className: \"m-auto\"\n  }), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"const queryClient = new QueryClient({\\n  defaultOptions: {\\n    queries: {\\n      staleTime: 20000\\n    }\\n  }\\n});\\n\")), \"\\n\", React.createElement(_components.p, null, \"만약 위와 같이 \", React.createElement(_components.code, null, \"QueryClient\"), \" 객체를 생성하면서 \", React.createElement(_components.code, null, \"defaultOption\"), \"을 설정해줬다면, 해당 객체에 잘 들어가 있는 것을 확인할 수 있다.\"), \"\\n\", React.createElement(\"img\", {\n    src: \"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbtzOGA%2FbtsajdJ9NfX%2FXayNAnkAJIrvIHrZwnGebK%2Fimg.png\",\n    width: \"369\",\n    className: \"m-auto\"\n  }), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"querycache\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#querycache\",\n    \"aria-label\": \"querycache permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"QueryCache\"), \"\\n\", React.createElement(_components.p, null, \"위에서 살펴본 \", React.createElement(_components.code, null, \"QueryClient\"), \"객체 안에는 QueryCache가 존재한다.\"), \"\\n\", React.createElement(\"img\", {\n    src: \"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fb3SW2I%2FbtsaEhX1n8r%2FlzaeL41GQjOAdi7KY5qXJ1%2Fimg.png\",\n    width: \"546\",\n    className: \"m-auto\"\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"QueryCache\"), \"는 javascript 객체다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"export class QueryCache extends Subscribable<QueryCacheListener> {\\n\\n  private queries: Query<any, any, any, any>[];\\n  private queriesMap: QueryHashMap;\\n...\\n\\nadd(query: Query<any, any, any, any>): void {\\n    if (!this.queriesMap[query.queryHash]) {\\n      this.queriesMap[query.queryHash] = query\\n      this.queries.push(query)\\n      this.notify({\\n        type: 'added',\\n        query,\\n      })\\n    }\\n  }\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"우리가 Query를 생성하면, \", React.createElement(_components.code, null, \"queryHash\"), \"를 객체의 key로,\\nquery 인스턴스를 값으로 넣어준다.\"), \"\\n\", React.createElement(_components.p, null, \"그리고 \", React.createElement(_components.code, null, \"queries\"), \" 라는 배열에 query 인스턴스를 추가한다.\"), \"\\n\", React.createElement(\"img\", {\n    src: \"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FXME6Q%2Fbtsaw8UFEBT%2F6lDIT6g0i0BgsbC2IrXQIK%2Fimg.png\",\n    width: \"700\",\n    className: \"m-auto\"\n  }), \"\\n\", React.createElement(_components.p, null, \"여기서 \", React.createElement(_components.code, null, \"queryHash\"), \"는 query key를 stringify한 값이다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"/**\\n * Default query keys hash function.\\n * Hashes the value into a stable hash.\\n */\\nexport function hashQueryKey(queryKey: QueryKey): string {\\n  return JSON.stringify(queryKey, (_, val) =>\\n    isPlainObject(val)\\n      ? Object.keys(val)\\n          .sort()\\n          .reduce((result, key) => {\\n            result[key] = val[key]\\n            return result\\n          }, {} as any)\\n      : val,\\n  )\\n}\\n\")), \"\\n\", React.createElement(\"img\", {\n    src: \"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fciw2GB%2Fbtsak3AcP1G%2FyIox0sBFqd6jipKpJjgFw1%2Fimg.png\",\n    width: \"385\",\n    className: \"m-auto\"\n  }), \"\\n\", React.createElement(_components.p, null, \"따라서 우리는 query 생성시 반드시 query key로 유니크한 값을 지정해주어야 한다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"query\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#query\",\n    \"aria-label\": \"query permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Query\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"QueryCache\"), \"의 value로 Query 객체 안에는 Query의 모든 정보들이 들어있다.\"), \"\\n\", React.createElement(\"img\", {\n    src: \"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fq2gPN%2Fbtsai557puT%2Ff50BoPHIz8vYAxKc2ajYek%2Fimg.png\",\n    width: \"665\",\n    className: \"m-auto\"\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"cache\"), \"에 자신이 위치한 \", React.createElement(_components.code, null, \"QueryCache\"), \"정보를 가지고 있으며, \", React.createElement(_components.code, null, \"observers\"), \"라는 배열도 가지고 있다.\"), \"\\n\", React.createElement(_components.p, null, \"이 \", React.createElement(_components.code, null, \"observers\"), \"에는 \", React.createElement(_components.code, null, \"QueryObserver\"), \"가 담긴다. \", React.createElement(_components.code, null, \"Query\"), \"는 \", React.createElement(_components.code, null, \"Observer\"), \"를 통해 누가 자신을 구독했는지 알고, \", React.createElement(_components.code, null, \"Observer\"), \"를 통해 모든 변경사항을 알릴 수 있다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"queryobserver\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#queryobserver\",\n    \"aria-label\": \"queryobserver permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"QueryObserver\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"useQuery호출 시\"), \" \", React.createElement(_components.code, null, \"Observer\"), \"가 생성된다. 이 \", React.createElement(_components.code, null, \"Observer\"), \"를 통해 \", React.createElement(_components.code, null, \"Query\"), \"와 컴포넌트가 연결된다.\"), \"\\n\", React.createElement(\"img\", {\n    src: \"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdQJ1uj%2FbtsaJVAnGCZ%2FAWAk7PUVHYWPVlp7IT6Ygk%2Fimg.jpg\",\n    width: \"265\",\n    className: \"m-auto\"\n  }), \"\\n\", React.createElement(\"img\", {\n    src: \"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FECpGH%2FbtsakftRfS8%2F3lWp6zMtQnNn1PhhZ30JmK%2Fimg.png\",\n    width: \"600\",\n    className: \"m-auto\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Observer에는 QueryClient객체를 비롯하여 현재 Query, 랜더링 유발 여부를 파악하기 위한 현재 결과값 등이 담겨있다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"usequery-호출-시-일어나는-일\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#usequery-%ED%98%B8%EC%B6%9C-%EC%8B%9C-%EC%9D%BC%EC%96%B4%EB%82%98%EB%8A%94-%EC%9D%BC\",\n    \"aria-label\": \"usequery 호출 시 일어나는 일 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"useQuery 호출 시 일어나는 일\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"useQuery\"), \"를 호출하고 \", React.createElement(_components.code, null, \"QueryCache\"), \"에서 데이터를 가져오는 과정을 살펴보자.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"Observer\"), \"를 생성하고, \", React.createElement(_components.code, null, \"queryCache\"), \"에서 데이터를 가져오는 핵심 로직은 모두 \", React.createElement(_components.code, null, \"useBaseQuery\"), \"에 존재한다.\\nuseQuery, useQueries, useInfiniteQuery는 모두 \", React.createElement(_components.code, null, \"useBaseQuery\"), \"를 감싼 custom hook이다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"useBaseQuery\"), \"의 구조를 살펴보자.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"export function useBaseQuery<\\n  TQueryFnData,\\n  TError,\\n  TData,\\n  TQueryData,\\n  TQueryKey extends QueryKey,\\n>(\\n  options: UseBaseQueryOptions<\\n    TQueryFnData,\\n    TError,\\n    TData,\\n    TQueryData,\\n    TQueryKey\\n  >,\\n  Observer: typeof QueryObserver,\\n) {\\n  const queryClient = useQueryClient({ context: options.context })\\n...\\n  const [observer] = React.useState(\\n    () =>\\n      new Observer<TQueryFnData, TError, TData, TQueryData, TQueryKey>(\\n        queryClient,\\n        defaultedOptions,\\n      ),\\n  )\\n\\n  const result = observer.getOptimisticResult(defaultedOptions)\\n\\n return result;\\n\")), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"// useBaseQuery.ts\\n\\nconst queryClient = useQueryClient({ context: options.context })\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"useBaseQuery\"), \" 호출 시 가장 먼저 하는 일은 \", React.createElement(_components.code, null, \"QueryClient\"), \" 객체를 가져오는 일이다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"observer-생성\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#observer-%EC%83%9D%EC%84%B1\",\n    \"aria-label\": \"observer 생성 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"observer 생성\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"// useBaseQuery.ts\\n\\nconst [observer] = React.useState(\\n    () =>\\n      new Observer<TQueryFnData, TError, TData, TQueryData, TQueryKey>(\\n        queryClient,\\n        defaultedOptions,\\n      ),\\n  )\\n\")), \"\\n\", React.createElement(_components.p, null, \"그 이후 \", React.createElement(_components.code, null, \"observer\"), \"를 생성한다. 위에서 가져온 \", React.createElement(_components.code, null, \"queryClient\"), \"와 \", React.createElement(_components.code, null, \"useQuery호출 시\"), \" 넣어준 \", React.createElement(_components.code, null, \"key\"), \"를 포함한 옵션값을 넣어준다. 이 \", React.createElement(_components.code, null, \"observer\"), \" 는 \", React.createElement(_components.code, null, \"useState\"), \"를 통해 생성되었으므로, \", React.createElement(_components.code, null, \"useQuery\"), \"를 호출한 컴포넌트가 \", React.createElement(_components.code, null, \"unmount\"), \" 되면 사라진다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"// queryObserver.ts\\n\\nconstructor(\\n    client: QueryClient,\\n    options: QueryObserverOptions<\\n      TQueryFnData,\\n      TError,\\n      TData,\\n      TQueryData,\\n      TQueryKey\\n    >,\\n  ) {\\n    super()\\n\\n    this.client = client\\n    this.options = options\\n    this.trackedProps = new Set()\\n    this.selectError = null\\n    this.bindMethods()\\n    this.setOptions(options)\\n  }\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"Observer\"), \" 가 생성되면 \", React.createElement(_components.code, null, \"setOptions\"), \"를 실행한다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"// queryObserver.ts\\n\\nsetOptions(options?: QueryObserverOptions<\\n      TQueryFnData,\\n      TError,\\n      TData,\\n      TQueryData,\\n      TQueryKey\\n    >,\\n    notifyOptions?: NotifyOptions,\\n  ): void {\\n    const prevOptions = this.options\\n    const prevQuery = this.currentQuery\\n\\n    this.options = this.client.defaultQueryOptions(options)\\n\\nthis.updateQuery();\\n\\n...\\nthis.updateResult(notifyOptions);\\n\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"setOptions\"), \" 은 \", React.createElement(_components.code, null, \"updateQuery\"), \" 와 \", React.createElement(_components.code, null, \"updateResult\"), \" 를 실행하는데, \\b \", React.createElement(_components.code, null, \"updateQuery\"), \" 를 좀 더 자세히 살펴보자.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"// queryObserver.ts\\n\\nprivate updateQuery(): void {\\n    const query = this.client.getQueryCache().build(this.client, this.options)\\n\\n    if (query === this.currentQuery) {\\n      return\\n    }\\n\\n    const prevQuery = this.currentQuery as\\n      | Query<TQueryFnData, TError, TQueryData, TQueryKey>\\n      | undefined\\n    this.currentQuery = query\\n    this.currentQueryInitialState = query.state\\n    this.previousQueryResult = this.currentResult\\n\\n    if (this.hasListeners()) {\\n      prevQuery?.removeObserver(this)\\n      query.addObserver(this)\\n    }\\n  }\\n\")), \"\\n\", React.createElement(_components.p, null, \"대략적으로 코드를 훑어보면, \", React.createElement(_components.code, null, \"options\"), \"을 가진 \", React.createElement(_components.code, null, \"Query\"), \" 객체를 \", React.createElement(_components.code, null, \"queryCache\"), \"에서 찾은 후 해당 \", React.createElement(_components.code, null, \"Query\"), \" 가 가지고 있는 결과값을 리턴한다는 것을 추측해 볼 수 있다. \"), \"\\n\", React.createElement(_components.p, null, \"하지만 여기까지의 과정에서 우리는 아직 \", React.createElement(_components.code, null, \"Query\"), \"가 생성되지 않았다는 것을 떠올려야 한다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"query-생성\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#query-%EC%83%9D%EC%84%B1\",\n    \"aria-label\": \"query 생성 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Query 생성\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"this.client.getQueryCache().build(this.client, this.options)\"), \"를 좀 더 들여다보자.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"// queryCache.ts\\n\\nbuild<TQueryFnData, TError, TData, TQueryKey extends QueryKey>(\\n    client: QueryClient,\\n    options: QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\\n    state?: QueryState<TData, TError>,\\n  ): Query<TQueryFnData, TError, TData, TQueryKey> {\\n    const queryKey = options.queryKey!\\n    const queryHash =\\n      options.queryHash ?? hashQueryKeyByOptions(queryKey, options)\\n    let query = this.get<TQueryFnData, TError, TData, TQueryKey>(queryHash)\\n\\n    if (!query) {\\n      query = new Query({\\n        cache: this,\\n        logger: client.getLogger(),\\n        queryKey,\\n        queryHash,\\n        options: client.defaultQueryOptions(options),\\n        state,\\n        defaultOptions: client.getQueryDefaults(queryKey),\\n      })\\n      this.add(query)\\n    }\\n\\n    return query\\n  }\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"Query\"), \" 의 생성은 \", React.createElement(_components.code, null, \"QueryCache\"), \" 의 \", React.createElement(_components.code, null, \"build\"), \" 매서드에서 이뤄진다.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"queryKey\"), \" 를 stringify해서 \", React.createElement(_components.code, null, \"queryHash\"), \" 를 생성\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"QueryCache\"), \" 에서 해당 key를 가진 \", React.createElement(_components.code, null, \"query\"), \"가 있는지 확인\"), \"\\n\", React.createElement(_components.li, null, \"없다면 새로운 \", React.createElement(_components.code, null, \"query\"), \" 생성\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"이제 \", React.createElement(_components.code, null, \"Query\"), \"가 생성되어 \", React.createElement(_components.code, null, \"cache\"), \"에 들어있게 되었다.\"), \"\\n\", React.createElement(_components.p, null, \"생성한 \", React.createElement(_components.code, null, \"Query\"), \"를 return해준다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.p, null, \"다시 \", React.createElement(_components.code, null, \"updateQuery\"), \"로 돌아가보면, 이제 \", React.createElement(_components.code, null, \"query\"), \"에 막 생성한 \", React.createElement(_components.code, null, \"Query\"), \" 인스턴스가 담겨있게된다.\"), \"\\n\", React.createElement(_components.p, null, \"이 \", React.createElement(_components.code, null, \"Query\"), \"의 정보를 \", React.createElement(_components.code, null, \"Observer\"), \"에 저장해두고 만약 다시 \", React.createElement(_components.code, null, \"updateQuery\"), \"가 호출되면 새로운 \", React.createElement(_components.code, null, \"Query\"), \"와 비교해서 새로운 \", React.createElement(_components.code, null, \"Query\"), \" 정보로 업데이트 해준다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"// queryObserver.ts\\n\\nprivate updateQuery(): void {\\n    const query = this.client.getQueryCache().build(this.client, this.options)\\n    \\n\\t...\\n    \\n \\tthis.currentQuery = query\\n \\tthis.currentQueryInitialState = query.state\\n    \\n \\t...\\n    \\n}\\n\")), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.p, null, \"다음은 \", React.createElement(_components.code, null, \"result\"), \"에 결과값들을 넣어준다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"// useBaseQuery.ts\\n\\nconst result = observer.getOptimisticResult(defaultedOptions)\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"// queryObserver.ts\\n\\ngetOptimisticResult(\\n    options: DefaultedQueryObserverOptions<\\n      TQueryFnData,\\n      TError,\\n      TData,\\n      TQueryData,\\n      TQueryKey\\n    >,\\n  ): QueryObserverResult<TData, TError> {\\n    const query = this.client.getQueryCache().build(this.client, options)\\n\\n    return this.createResult(query, options)\\n  }\\n\")), \"\\n\", React.createElement(_components.p, null, \"바로 위에서 알아봤듯, \", React.createElement(_components.code, null, \"const query = this.client.getQueryCache().build(this.client, options)\"), \"은 \", React.createElement(_components.code, null, \"options\"), \"에 해당하는 \", React.createElement(_components.code, null, \"Query\"), \"를 반환하고, 없으면 \", React.createElement(_components.code, null, \"Query\"), \"를 새로 생성한다.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"createResult\"), \"는 함수명 그대로 사용자가 설정한 옵션에 따라\\n \", React.createElement(_components.code, null, \"Query\"), \"가 가진 데이터를 비롯한 \", React.createElement(_components.code, null, \"isLoading\"), \", \", React.createElement(_components.code, null, \"isStale\"), \", \", React.createElement(_components.code, null, \"status\"), \" 등의 상태 값을 리턴해준다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"// queryObserver.ts\\n\\n\\tprotected createResult(\\n        query: Query<TQueryFnData, TError, TQueryData, TQueryKey>,\\n        options: QueryObserverOptions<\\n          TQueryFnData,\\n          TError,\\n          TData,\\n          TQueryData,\\n          TQueryKey\\n        >,\\n      ): QueryObserverResult<TData, TError> {\\n  \\n      ...\\n        const result: QueryObserverBaseResult<TData, TError> = {\\n          status,\\n          fetchStatus,\\n          isLoading,\\n          isSuccess: status === 'success',\\n          isError,\\n          isInitialLoading: isLoading && isFetching,\\n          data,\\n          dataUpdatedAt,\\n          error,\\n          errorUpdatedAt,\\n          failureCount: state.fetchFailureCount,\\n          failureReason: state.fetchFailureReason,\\n          errorUpdateCount: state.errorUpdateCount,\\n          isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,\\n          isFetchedAfterMount:\\n            state.dataUpdateCount > queryInitialState.dataUpdateCount ||\\n            state.errorUpdateCount > queryInitialState.errorUpdateCount,\\n          isFetching,\\n          isRefetching: isFetching && !isLoading,\\n          isLoadingError: isError && state.dataUpdatedAt === 0,\\n          isPaused: fetchStatus === 'paused',\\n          isPlaceholderData,\\n          isPreviousData,\\n          isRefetchError: isError && state.dataUpdatedAt !== 0,\\n          isStale: isStale(query, options),\\n          refetch: this.refetch,\\n          remove: this.remove,\\n        }\\n\\n        return result as QueryObserverResult<TData, TError>\\n  }\\n\")), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"결과값-리턴\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EA%B2%B0%EA%B3%BC%EA%B0%92-%EB%A6%AC%ED%84%B4\",\n    \"aria-label\": \"결과값 리턴 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"결과값 리턴\"), \"\\n\", React.createElement(_components.p, null, \"이제 마지막 줄이다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"// useBaseQuery.ts\\n\\n// Handle result property usage tracking\\nreturn !defaultedOptions.notifyOnChangeProps\\n    ? observer.trackResult(result)\\n    : result\\n\")), \"\\n\", React.createElement(_components.p, null, \"v3까지는 \", React.createElement(_components.code, null, \"notifyOnChangeProps\"), \" 을 \", React.createElement(_components.code, null, \"'tracked'\"), \" 로 설정해야 실제 사용하고 있는 속성이 변경되는 경우에만 리렌더링을 해주었다. 하지만 v4에서는 이 설정이 기본값이 되었다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"trackResult(\\n    result: QueryObserverResult<TData, TError>,\\n  ): QueryObserverResult<TData, TError> {\\n    const trackedResult = {} as QueryObserverResult<TData, TError>\\n\\n    Object.keys(result).forEach((key) => {\\n      Object.defineProperty(trackedResult, key, {\\n        configurable: false,\\n        enumerable: true,\\n        get: () => {\\n          this.trackedProps.add(key as keyof QueryObserverResult)\\n          return result[key as keyof QueryObserverResult]\\n        },\\n      })\\n    })\\n\\n    return trackedResult\\n  }\\n\")), \"\\n\", React.createElement(_components.p, null, \"query에서 가져온 result는 \", React.createElement(_components.code, null, \"observer.trackResult\"), \" 를 통해 실제 사용하고 있는 속성들을 \", React.createElement(_components.code, null, \"trackedProps\"), \" 에 넣고 관리한다. \", React.createElement(_components.code, null, \"trackedProps\"), \"에 속한 속성들이 변경됐을때만 리랜더링을 발생시킨다.\\n\", React.createElement(_components.code, null, \"notifyOnChangeProps\"), \"을 \", React.createElement(_components.code, null, \"‘all’\"), \" 로 해주면 v3의 기본 설정처럼 result에 포함된 모든 속성이 변경될 때마다 리렌더링을 야기한다.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"useQuery\"), \"를 호출하면,\\n\", React.createElement(_components.code, null, \"Observer\"), \"가 생성되고 \", React.createElement(_components.code, null, \"Query\"), \"를 생성한 후 \", React.createElement(_components.code, null, \"Query\"), \"의 \", React.createElement(_components.code, null, \"result\"), \"를 가져와 반환하는 과정을 알아보았다.\"), \"\\n\", React.createElement(_components.p, null, \"하나의 \", React.createElement(_components.code, null, \"Query\"), \"에 대하여 \", React.createElement(_components.code, null, \"useQuery\"), \"는 여러번 호출될 수 있고, 이는 하나의 \", React.createElement(_components.code, null, \"Query\"), \"에 대하여 여러개의 \", React.createElement(_components.code, null, \"Observer\"), \"를 생성할 수 있다는 것을 의미한다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.p, null, \"그렇다면 \", React.createElement(_components.code, null, \"observer\"), \"는 \", React.createElement(_components.code, null, \"Query\"), \"의 변화를 어렇게 알아챌까?\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"// useBaseQuery.ts\\n\\nuseSyncExternalStore(\\n    React.useCallback(\\n      (onStoreChange) =>\\n        isRestoring\\n          ? () => undefined\\n          : observer.subscribe(notifyManager.batchCalls(onStoreChange)),\\n      [observer, isRestoring],\\n    ),\\n    () => observer.getCurrentResult(),\\n    () => observer.getCurrentResult(),\\n  )\\n\")), \"\\n\", React.createElement(_components.p, null, \"모든 observer는 \", React.createElement(_components.code, null, \"useSyncExternalStore\"), \" 라는 hook를 통해 query 데이터의 변화를 감지한다.\"), \"\\n\", React.createElement(_components.p, null, \"여기서 모든걸 다루게 되면 포스팅이 너무 길어지기 때문에, \", React.createElement(_components.code, null, \"useSyncExternalStore\"), \" 에 대해서는 다음 포스팅으로 넘기겠다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"참고-\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EC%B0%B8%EA%B3%A0-\",\n    \"aria-label\": \"참고  permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"참고 📌\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/TanStack/query/blob/main/packages/react-query/src/useBaseQuery.ts\"\n  }, \"https://github.com/TanStack/query/blob/main/packages/react-query/src/useBaseQuery.ts\")), \"\\n\", React.createElement(_components.p, null, \" \", React.createElement(_components.a, {\n    href: \"https://github.com/TanStack/query/blob/main/packages/react-query/src/useBaseQuery.ts\"\n  }, \"GitHub - TanStack/query\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://tkdodo.eu/blog/inside-react-query\"\n  }, \"https://tkdodo.eu/blog/inside-react-query\")), \"\\n\", React.createElement(_components.p, null, \" \", React.createElement(_components.a, {\n    href: \"https://tkdodo.eu/blog/inside-react-query\"\n  }, \"Inside React Query\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/ego/Documents/go/ego-blog/content/blog/REACT/how-does-react-query-work.mdx\";\nimport * as React from \"react\";\nimport {Link, graphql} from \"gatsby\";\nimport {HiChevronRight} from \"@react-icons/all-files/hi/HiChevronRight\";\nimport {HiChevronLeft} from \"@react-icons/all-files/hi/HiChevronLeft\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport {Tag, TagBox} from \"../components/Tag\";\nimport {CodeBlock} from \"../components/Block/CodeBlock\";\nimport Comment from \"../components/Post/Comment\";\nimport TableOfContents from \"../components/TableOfContents/TableOfContents\";\nconst components = {\n  img: ({src, alt}) => React.createElement(\"img\", {\n    src: src,\n    alt: alt,\n    className: \"m-auto md:w-3/4\"\n  }),\n  pre: CodeBlock,\n  code: props => React.createElement(\"code\", Object.assign({}, props, {\n    className: \"bg-background-primary text-accent-default bg-opacity-70\"\n  }))\n};\nconst BlogPostTemplate = ({data: {previous, next, site, mdx: post}, location, children}) => {\n  const siteTitle = site.siteMetadata?.title || `Title`;\n  return React.createElement(Layout, {\n    location: location,\n    title: siteTitle\n  }, React.createElement(\"article\", {\n    className: \"blog-post px-8 pt-10\",\n    itemScope: true,\n    itemType: \"http://schema.org/Article\"\n  }, React.createElement(\"header\", {\n    className: \"text-center py-14\"\n  }, React.createElement(\"h1\", {\n    itemProp: \"headline\"\n  }, post.frontmatter.title), React.createElement(\"p\", {\n    className: \"text-accent-default text-xs mt-8\"\n  }, post.frontmatter.date)), React.createElement(\"section\", {\n    className: \"h-fit my-28 text-text-default\",\n    itemProp: \"articleBody\"\n  }, React.createElement(MDXProvider, {\n    components: components\n  }, children)), React.createElement(TagBox, null, post.frontmatter.tags.map(tag => React.createElement(Tag, {\n    key: tag,\n    text: tag\n  }))), React.createElement(\"hr\", {\n    className: \"my-10\"\n  }), React.createElement(Comment), React.createElement(\"footer\")), React.createElement(\"nav\", {\n    className: \"blog-post-nav px-8 mt-8\"\n  }, React.createElement(\"ul\", {\n    className: \"flex flex-wrap justify-between list-none p-0 text-text-default\"\n  }, previous ? React.createElement(Link, {\n    to: previous.fields.slug,\n    rel: \"prev\"\n  }, React.createElement(\"li\", {\n    className: \"bg-background-primary/50 text-sm p-3 rounded-xl h-fit flex items-center gap-3\"\n  }, React.createElement(HiChevronLeft, {\n    size: 22,\n    className: \"text-accent-default\"\n  }), React.createElement(\"p\", {\n    className: \"max-w-[28rem]\"\n  }, previous.frontmatter.title))) : React.createElement(\"div\"), next && React.createElement(Link, {\n    to: next.fields.slug,\n    rel: \"next\"\n  }, React.createElement(\"li\", {\n    className: \"bg-background-primary/50 text-sm p-3 rounded-xl h-fit flex items-center gap-3\"\n  }, React.createElement(\"p\", {\n    className: \"max-w-[28rem]\"\n  }, next.frontmatter.title), React.createElement(HiChevronRight, {\n    size: 22,\n    className: \"text-accent-default\"\n  }))))), React.createElement(TableOfContents, {\n    contents: post.tableOfContents\n  }));\n};\nexport const Head = ({data: {mdx: post}}) => {\n  return React.createElement(Seo, {\n    title: post.frontmatter.title,\n    description: post.frontmatter.description || post.excerpt\n  });\n};\nBlogPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    mdx(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      tableOfContents\n      frontmatter {\n        title\n        date(formatString: \"YYYY.MM.DD\")\n        description\n        tags\n      }\n    }\n    previous: mdx(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: mdx(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","span","p","code","pre","h2","ol","li","_provideComponents","components","React","id","style","position","href","className","dangerouslySetInnerHTML","__html","src","width","wrapper","MDXLayout","img","_ref","alt","CodeBlock","BlogPostTemplate","_ref2","_site$siteMetadata","data","previous","next","site","mdx","post","location","children","siteTitle","siteMetadata","title","Layout","itemScope","itemType","itemProp","frontmatter","date","MDXProvider","TagBox","tags","map","tag","Tag","key","text","Comment","Link","to","fields","slug","rel","HiChevronLeft","size","HiChevronRight","TableOfContents","contents","tableOfContents","Head","_ref3","Seo","description","excerpt","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}