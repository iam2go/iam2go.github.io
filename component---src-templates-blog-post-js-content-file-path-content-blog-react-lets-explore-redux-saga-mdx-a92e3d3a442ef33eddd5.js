"use strict";(self.webpackChunkleego_dev_log=self.webpackChunkleego_dev_log||[]).push([[739],{4076:function(e,t,a){a.r(t),a.d(t,{Head:function(){return v},default:function(){return b}});var n=a(1151),l=a(7294);function r(e){const t=Object.assign({h1:"h1",a:"a",span:"span",p:"p",strong:"strong",blockquote:"blockquote",ul:"ul",li:"li",h2:"h2",br:"br",code:"code",pre:"pre"},(0,n.ah)(),e.components);return l.createElement(l.Fragment,null,l.createElement(t.h1,{id:"redux-saga란",style:{position:"relative"}},l.createElement(t.a,{href:"#redux-saga%EB%9E%80","aria-label":"redux saga란 permalink",className:"anchor before"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Redux-saga란?🤔"),"\n",l.createElement(t.p,null,"공식문서에서는 ",l.createElement(t.strong,null,"Redux-saga"),"를 다음과 같이 소개하고 있다."),"\n",l.createElement(t.blockquote,null,"\n",l.createElement(t.p,null,"Redux-saga는 react/redux 애플리케이션의 사이드 이펙트, 예를 들면 데이터 fetching이나 브라우저 캐시에 접근하는 순수하지 않은 비동기 동작들을 더 쉽고 보기 좋게 만드는 것을 목적으로 하는 라이브러리이다."),"\n"),"\n",l.createElement("br"),"\n",l.createElement("img",{src:"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fd87VoO%2Fbtrd5ECCx1e%2FL82FEpgplfDTUOWVGqBzeK%2Fimg.png",width:"439",className:"m-auto"}),"\n",l.createElement(t.p,null,"redux에서는 ",l.createElement(t.strong,null,"action"),"을 발생시키면 ",l.createElement(t.strong,null,"reducer"),"를 통해 state를 변화시켜 ",l.createElement(t.strong,null,"store"),"를 갱신했다."),"\n",l.createElement("br"),"\n",l.createElement("img",{src:"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbF0axm%2Fbtrd0ksk0PS%2Fq3JXY0rK9PFv9CmYdEZnXK%2Fimg.png",width:"439",className:"m-auto"}),"\n",l.createElement(t.p,null,"Redux-saga는 ",l.createElement(t.strong,null,"action과 reducer사이에서 흐름을 제어하는 미들웨어"),"이다. 이 중간에서 Redux-saga는 action이 발생하면 reducer가 액션을 처리하기 전에 ",l.createElement(t.strong,null,"다양한 작업"),"을 할 수 있다."),"\n",l.createElement("br"),"\n",l.createElement(t.p,null,"다양한 작업들의 예시는 이렇다."),"\n",l.createElement(t.ul,null,"\n",l.createElement(t.li,null,"기존 요청을 취소 처리하거나 불필요한 중복 요청을 방지할 수 있다."),"\n",l.createElement(t.li,null,"비동기 작업을 처리하는데 효과적이다."),"\n",l.createElement(t.li,null,"특정 액션이 발생했을 때 다른 액션을 발생시키거나, 리덕스와 관계없는 코드 실행시 사용한다."),"\n"),"\n",l.createElement("br"),"\n",l.createElement(t.p,null,"즉, Redux-saga를 이용하면 보다 간편하면서도 깊게 state의 흐름을 제어할 수 있다."),"\n",l.createElement("br"),"\n",l.createElement("br"),"\n",l.createElement(t.h1,{id:"redux-saga를-도입한-이유",style:{position:"relative"}},l.createElement(t.a,{href:"#redux-saga%EB%A5%BC-%EB%8F%84%EC%9E%85%ED%95%9C-%EC%9D%B4%EC%9C%A0","aria-label":"redux saga를 도입한 이유 permalink",className:"anchor before"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Redux-saga를 도입한 이유"),"\n",l.createElement(t.p,null,"우리 팀이 Redux-saga를 도입하기로 결정한 이유는 크게 두가지였다."),"\n",l.createElement("br"),"\n",l.createElement(t.h2,{id:"1-api-호출-로직을-효율적으로-관리할-수-있다",style:{position:"relative"}},l.createElement(t.a,{href:"#1-api-%ED%98%B8%EC%B6%9C-%EB%A1%9C%EC%A7%81%EC%9D%84-%ED%9A%A8%EC%9C%A8%EC%A0%81%EC%9C%BC%EB%A1%9C-%EA%B4%80%EB%A6%AC%ED%95%A0-%EC%88%98-%EC%9E%88%EB%8B%A4","aria-label":"1 api 호출 로직을 효율적으로 관리할 수 있다 permalink",className:"anchor before"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"1. api 호출 로직을 효율적으로 관리할 수 있다."),"\n",l.createElement(t.p,null,"오로지 비동기 작업만을 위해 redux-saga를 쓰는것은 개인적으로 크게 효율적이지 않다고 생각한다.",l.createElement(t.br),"\n",l.createElement(t.code,null,"async/await"),"라는 흘륭한 기능으로 비동기 동작들을 처리할 수 있는데 굳이 코드량을 늘려가며 redux-saga를 도입할 이유가 있을까?"),"\n",l.createElement(t.p,null,"하지만 redux-saga에서는 비동기 동작에 대한 더 세부적인 컨트롤이 가능했다. 예를 들면 사용자의 부주의로 동일한 api를 여러번 호출할 경우, 가장 마지막 호출의 ",l.createElement(t.code,null,"response"),"만 받아오도록 제어할 수 있다."),"\n",l.createElement(t.p,null,"무엇보다 api 호출 로직을 saga에서 관리하면서, Presentational 컴포넌트와 Container 컴포넌트의 명확한 분리가 가능해졌다. 또한 같은 api를 다른 페이지에서 호출시 같은 코드를 두번 적어줘야 했다면, api 호출 로직을 Redux-saga로 관리하면서 selector로 데이터 만을 간편하게 가져올 수 있게되었다."),"\n",l.createElement("br"),"\n",l.createElement(t.h2,{id:"2-callback-함수를-action-payload로-넘길-수-있다",style:{position:"relative"}},l.createElement(t.a,{href:"#2-callback-%ED%95%A8%EC%88%98%EB%A5%BC-action-payload%EB%A1%9C-%EB%84%98%EA%B8%B8-%EC%88%98-%EC%9E%88%EB%8B%A4","aria-label":"2 callback 함수를 action payload로 넘길 수 있다 permalink",className:"anchor before"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"2. callback 함수를 action payload로 넘길 수 있다."),"\n",l.createElement(t.p,null,"공통으로 사용할 모달창을 구현했다. 이 모달창에서 확인 버튼을 누르면 모달창을 호출한 페이지에서 그 사실을 알아야 하는데 그 로직을 어떻게 구현할지에 대해 많은 고민을 했다."),"\n",l.createElement(t.p,null,"모달창을 열 때 페이지의 callback 함수를 함께 넘겨주는 것이 가장 좋은 방법이지만, redux에서는 callback을 ",l.createElement(t.code,null,"state"),"값으로 저장하는 것을 권장하지 않는다.(",l.createElement(t.a,{href:"https://redux.js.org/faq/organizing-state#can-i-put-functions-promises-or-other-non-serializable-items-in-my-store-state"},"# Can I put functions, promises, or other non-serializable items in my store state?")," 참고)"),"\n",l.createElement(t.p,null,"이때 redux-saga를 사용하면 callback값을 redux-saga에서 처리해주기 때문에 action ",l.createElement(t.code,null,"payload"),"로 callback을 넘길 수 있게되었다."),"\n",l.createElement("br"),"\n",l.createElement("br"),"\n",l.createElement(t.h1,{id:"redux-saga의-동작-원리",style:{position:"relative"}},l.createElement(t.a,{href:"#redux-saga%EC%9D%98-%EB%8F%99%EC%9E%91-%EC%9B%90%EB%A6%AC","aria-label":"redux saga의 동작 원리 permalink",className:"anchor before"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Redux-saga의 동작 원리"),"\n",l.createElement(t.p,null,"Redux-saga는 ",l.createElement(t.strong,null,"제너레이터 함수")," 문법을 기반으로 비동기 작업을 관리한다. (symbol을 알아보고, generator를 공부한 이유가 여기에 있다.) Redux-saga는 우리가 디스패치 하는 action을 모니터링해서 그에 따라 필요한 작업을 따로 수행할 수 있다."),"\n",l.createElement(t.pre,null,l.createElement(t.code,null,'function* watchGenerator(){\n    console.log("모니터링 중...");\n    let prevAction = null;\n    while(true){\n        const action = yield;\n        console.log("이전 액션: ", prevAction);\n        prevAction = action;\n\n        if(action.type === "HELLO"){\n            console.log("안녕");\n        }\n    }\n}\nconst watch = watcjGenerator();\nwatch.next();\n// 모니터링 중...\n// { value: undefined, done: false}\nwatch.next({type: "TEST"});\n// 이전 액션: null\n// { value: undefined, done: false}\nwatch.next({ type: "HELLO"});\n// 이전 액션: {type: "TEST"}\n// 안녕\n// {value: undefined, done: false}\n')),"\n",l.createElement(t.p,null,"위 코드는 Redux-saga가 실제로 action을 어떻게 캐치하고 구분하는지를 비슷하게 흉내낸 코드이다."),"\n",l.createElement(t.p,null,"앞서 ",l.createElement(t.a,{href:"https://leego.github.io/JS/what-is-a-Generator/"},"Generator란 무엇일까? 포스팅"),"에서 Generator안에서 ",l.createElement(t.code,null,"while(true)"),"를 사용하면 무한으로 사용가능한 로직을 만들 수 있다고 했다. Redux-saga에서는 ",l.createElement(t.strong,null,"실제로 ",l.createElement(t.code,null,"while(true)"),"를 사용하여 지속적으로 action을 모니터링 하고 action이 발생하면 해당하는 로직을 수행한다.")),"\n",l.createElement("br"),"\n",l.createElement("br"),"\n",l.createElement(t.h1,{id:"redux-saga의-헬퍼-함수",style:{position:"relative"}},l.createElement(t.a,{href:"#redux-saga%EC%9D%98-%ED%97%AC%ED%8D%BC-%ED%95%A8%EC%88%98","aria-label":"redux saga의 헬퍼 함수 permalink",className:"anchor before"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"redux-saga의 헬퍼 함수"),"\n",l.createElement(t.h2,{id:"delay",style:{position:"relative"}},l.createElement(t.a,{href:"#delay","aria-label":"delay permalink",className:"anchor before"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"delay"),"\n",l.createElement(t.p,null,"설정된 시간 이후에 ",l.createElement(t.code,null,"resolve"),"를 하는 ",l.createElement(t.code,null,"Promise")," 객체를 리턴한다."),"\n",l.createElement(t.h2,{id:"put",style:{position:"relative"}},l.createElement(t.a,{href:"#put","aria-label":"put permalink",className:"anchor before"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"put"),"\n",l.createElement(t.p,null,"특정 액션을 ",l.createElement(t.code,null,"dispatch"),"한다. (ex: ",l.createElement(t.code,null,"put({type: 'INCREMEMT})"),")"),"\n",l.createElement(t.h2,{id:"call",style:{position:"relative"}},l.createElement(t.a,{href:"#call","aria-label":"call permalink",className:"anchor before"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"call"),"\n",l.createElement(t.p,null,"주어진 함수를 실행한다. (ex: ",l.createElement(t.code,null,"call(delay, 1000)"),")"),"\n",l.createElement(t.p,null,"미들웨어가 ",l.createElement(t.code,null,"Promise"),"의 ",l.createElement(t.code,null,"resolve"),"를 기다리게 하기 때문에 동기함수(주로 api 호출)에 사용한다."),"\n",l.createElement(t.h2,{id:"take",style:{position:"relative"}},l.createElement(t.a,{href:"#take","aria-label":"take permalink",className:"anchor before"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"take"),"\n",l.createElement(t.p,null,"들어오는 특정 액션을 처리한다. 한번 실행되고 이벤트가 삭제된다."),"\n",l.createElement(t.h2,{id:"takeevery",style:{position:"relative"}},l.createElement(t.a,{href:"#takeevery","aria-label":"takeevery permalink",className:"anchor before"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"takeEvery"),"\n",l.createElement(t.p,null,l.createElement(t.strong,null,"모든 리퀘스트에 대해")," task를 실행한다."),"\n",l.createElement(t.pre,null,l.createElement(t.code,null,"function* watchFetchData(){\n    yield takeEvery('FETCH_REQUESTED', fetchData)\n}\n")),"\n",l.createElement(t.p,null,"만약 ",l.createElement(t.code,null,"fetchData")," task가 시작되었을때 이미 이전 task가 실행중이라면, 이전 task는 자동으로 취소된다."),"\n",l.createElement(t.h2,{id:"fork",style:{position:"relative"}},l.createElement(t.a,{href:"#fork","aria-label":"fork permalink",className:"anchor before"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"fork"),"\n",l.createElement(t.p,null,"백그라운드에서 task가 실행된다."),"\n",l.createElement(t.pre,null,l.createElement(t.code,null,"function* loginFlow() {\n  while (true) {\n    const {user, password} = yield take('LOGIN_REQUEST')\n    const token = yield call(authorize, user, password)\n    if (token) {\n      yield call(Api.storeItem, {token})\n      yield take('LOGOUT')\n      yield call(Api.clearItem, 'token')\n    }\n  }\n}\n")),"\n",l.createElement(t.p,null,"위와 같은 로그인 로직이 있다. 이 로직은 로그인을 하고(",l.createElement(t.code,null,"'LOGIN_REQUEST'"),"), 사용자 인증을 거치면 ",l.createElement(t.code,null,"'LOGOUT'")," task를 기다린다.",l.createElement(t.br),"\n","만약 ",l.createElement(t.code,null,"'LOGIN_REQUEST'"),"가 실행되고, token을 받아오는 중에 사용자가 ",l.createElement(t.code,null,"'LOGOUT'")," task를 실행한다면 어떻게 될까? ",l.createElement(t.code,null,"'LOGOUT'")," task는 무시된다. ",l.createElement(t.code,null,"call"),"은 봉쇄(blocking) effect라서 호출이 종료되기 전까지는 아무것도 수행할 수 없기 때문이다."),"\n",l.createElement(t.pre,null,l.createElement(t.code,null,"function* loginFlow() {\n  while (true) {\n    ...\n    try {\n      // non-blocking call, what's the returned value here ?\n      const ?? = yield fork(authorize, user, password)\n      ...\n    }\n    ...\n  }\n}\n")),"\n",l.createElement(t.p,null,"이럴때 ",l.createElement(t.code,null,"fork"),"를 사용해주면, ",l.createElement(t.strong,null,"task는 백그라운드에서 시작"),"되고, 호출자는 ",l.createElement(t.code,null,"fork"),"된 task가 종료될 떄까지 기다리지 않고 플로우를 계속해서 진행한다."),"\n",l.createElement("br"),"\n",l.createElement(t.p,null,"❗ 단, ",l.createElement(t.code,null,"fork"),"는 백그라운드에서 실행되기 때문에 token을 받아올 수 없다. 이럴 경우에는 token을 ",l.createElement(t.code,null,"authorize")," 안에서 받아와야한다."),"\n",l.createElement(t.pre,null,l.createElement(t.code,null,"function* authorize(user, password) {\n  try {\n    const token = yield call(Api.authorize, user, password)\n    ...\n  } catch(error) {\n    ...  \n    }\n}\n\nfunction* loginFlow() {\n  while (true) {\n    ...    \n        yield fork(authorize, user, password)\n    ...\n  }\n}\n")),"\n",l.createElement(t.p,null,"그러면 위와 같은 로직이 된다."),"\n",l.createElement(t.p,null,"( 만약 ",l.createElement(t.code,null,"finally")," 구간에서 제너레이터가 취소된건지 확인이 필요하다면 ",l.createElement(t.code,null,"yield cancelled()")," 으로 확인가능하다. )"),"\n",l.createElement(t.h2,{id:"cancle",style:{position:"relative"}},l.createElement(t.a,{href:"#cancle","aria-label":"cancle permalink",className:"anchor before"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"cancle"),"\n",l.createElement(t.p,null,l.createElement(t.code,null,"fork"),"된 task를 취소시킨다. (ex: ",l.createElement(t.code,null,"yield cancel(task)"),")"),"\n",l.createElement(t.p,null,"제너레이터를 ",l.createElement(t.code,null,"finally")," 구간으로 가게한다. 이때 취소한 task 하위에 다른 task가 포함되어 있다면 모두 취소된다."),"\n",l.createElement(t.h2,{id:"all",style:{position:"relative"}},l.createElement(t.a,{href:"#all","aria-label":"all permalink",className:"anchor before"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"all"),"\n",l.createElement(t.p,null,"이 함수를 사용해서 제너레이터 함수를 배열의 형태로 넣어주면, 제너레이터 함수들이 병행적으로 동시에 실행되고, 전부 ",l.createElement(t.code,null,"resolve"),"될때까지 기다린다. (",l.createElement(t.code,null,"Promise.all"),"과 비슷하다.)"),"\n",l.createElement("br"),"\n",l.createElement("br"),"\n",l.createElement(t.h1,{id:"참고-",style:{position:"relative"}},l.createElement(t.a,{href:"#%EC%B0%B8%EA%B3%A0-","aria-label":"참고  permalink",className:"anchor before"},l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"참고 📌"),"\n",l.createElement(t.p,null,l.createElement(t.a,{href:"https://mskims.github.io/redux-saga-in-korean/"},"https://mskims.github.io/redux-saga-in-korean/")),"\n",l.createElement(t.p,null,l.createElement(t.a,{href:"https://kyounghwan01.github.io/blog/React/redux/redux-saga/#"},"https://kyounghwan01.github.io/blog/React/redux/redux-saga/#"),l.createElement(t.a,{href:"https://kyounghwan01.github.io/blog/React/redux/redux-saga/#%E1%84%8B%E1%85%B1-%E1%84%8F%E1%85%A9%E1%84%83%E1%85%B3%E1%84%8B%E1%85%B4-%E1%84%8C%E1%85%A5%E1%86%AB%E1%84%8E%E1%85%A6%E1%84%8C%E1%85%A5%E1%86%A8%E1%84%8B%E1%85%B5%E1%86%AB-%E1%84%89%E1%85%B5%E1%86%AF%E1%84%92%E1%85%A2%E1%86%BC-%E1%84%80%E1%85%AA%E1%84%8C%E1%85%A5%E1%86%BC"},"위-코드의-전체적인-실행-과정")))}var c=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,n.ah)(),e.components);return t?l.createElement(t,e,l.createElement(r,e)):r(e)},o=a(1883),s=a(157),i=a(588),m=a(8709),h=a(9357),d=a(7174),u=a(4462),E=a(8336),p=a(1075);const g={img:e=>{let{src:t,alt:a}=e;return l.createElement("img",{src:t,alt:a,className:"m-auto md:w-3/4"})},pre:u.d,code:e=>l.createElement("code",Object.assign({},e,{className:"bg-background-primary text-accent-default bg-opacity-70"}))},f=e=>{var t;let{data:{previous:a,next:r,site:c,mdx:h},location:u,children:f}=e;const v=(null===(t=c.siteMetadata)||void 0===t?void 0:t.title)||"Title";return l.createElement(m.Z,{location:u,title:v},l.createElement("article",{className:"blog-post px-8 pt-10",itemScope:!0,itemType:"http://schema.org/Article"},l.createElement("header",{className:"text-center py-14"},l.createElement("h1",{itemProp:"headline"},h.frontmatter.title),l.createElement("p",{className:"text-accent-default text-xs mt-8"},h.frontmatter.date)),l.createElement("section",{className:"h-fit my-28 text-text-default",itemProp:"articleBody"},l.createElement(n.Zo,{components:g},f)),l.createElement(d.a,null,h.frontmatter.tags.map((e=>l.createElement(d.V,{key:e,text:e})))),l.createElement("hr",{className:"my-10"}),l.createElement(E.Z),l.createElement("footer")),l.createElement("nav",{className:"blog-post-nav px-8 mt-8"},l.createElement("ul",{className:"flex flex-wrap justify-between list-none p-0 text-text-default"},a?l.createElement(o.Link,{to:a.fields.slug,rel:"prev"},l.createElement("li",{className:"bg-background-primary/50 text-sm p-3 rounded-xl h-fit flex items-center gap-3"},l.createElement(i.D,{size:22,className:"text-accent-default"}),l.createElement("p",{className:"max-w-[28rem]"},a.frontmatter.title))):l.createElement("div"),r&&l.createElement(o.Link,{to:r.fields.slug,rel:"next"},l.createElement("li",{className:"bg-background-primary/50 text-sm p-3 rounded-xl h-fit flex items-center gap-3"},l.createElement("p",{className:"max-w-[28rem]"},r.frontmatter.title),l.createElement(s.M,{size:22,className:"text-accent-default"}))))),l.createElement(p.Z,{contents:h.tableOfContents}))},v=e=>{let{data:{mdx:t}}=e;return l.createElement(h.Z,{title:t.frontmatter.title,description:t.frontmatter.description||t.excerpt})};function b(e){return l.createElement(f,e,l.createElement(c,e))}}}]);
//# sourceMappingURL=component---src-templates-blog-post-js-content-file-path-content-blog-react-lets-explore-redux-saga-mdx-a92e3d3a442ef33eddd5.js.map