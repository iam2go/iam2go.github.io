{"version":3,"file":"component---src-templates-blog-post-js-content-file-path-content-blog-react-lets-explore-redux-saga-mdx-a92e3d3a442ef33eddd5.js","mappings":"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","sources":["webpack://leego.dev.log/./content/blog/REACT/lets-explore-redux-saga.mdx","webpack://leego.dev.log/./src/templates/blog-post.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    a: \"a\",\n    span: \"span\",\n    p: \"p\",\n    strong: \"strong\",\n    blockquote: \"blockquote\",\n    ul: \"ul\",\n    li: \"li\",\n    h2: \"h2\",\n    br: \"br\",\n    code: \"code\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, {\n    id: \"redux-saga란\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#redux-saga%EB%9E%80\",\n    \"aria-label\": \"redux saga란 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Redux-saga란?🤔\"), \"\\n\", React.createElement(_components.p, null, \"공식문서에서는 \", React.createElement(_components.strong, null, \"Redux-saga\"), \"를 다음과 같이 소개하고 있다.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Redux-saga는 react/redux 애플리케이션의 사이드 이펙트, 예를 들면 데이터 fetching이나 브라우저 캐시에 접근하는 순수하지 않은 비동기 동작들을 더 쉽고 보기 좋게 만드는 것을 목적으로 하는 라이브러리이다.\"), \"\\n\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(\"img\", {\n    src: \"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fd87VoO%2Fbtrd5ECCx1e%2FL82FEpgplfDTUOWVGqBzeK%2Fimg.png\",\n    width: \"439\",\n    className: \"m-auto\"\n  }), \"\\n\", React.createElement(_components.p, null, \"redux에서는 \", React.createElement(_components.strong, null, \"action\"), \"을 발생시키면 \", React.createElement(_components.strong, null, \"reducer\"), \"를 통해 state를 변화시켜 \", React.createElement(_components.strong, null, \"store\"), \"를 갱신했다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(\"img\", {\n    src: \"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbF0axm%2Fbtrd0ksk0PS%2Fq3JXY0rK9PFv9CmYdEZnXK%2Fimg.png\",\n    width: \"439\",\n    className: \"m-auto\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Redux-saga는 \", React.createElement(_components.strong, null, \"action과 reducer사이에서 흐름을 제어하는 미들웨어\"), \"이다. 이 중간에서 Redux-saga는 action이 발생하면 reducer가 액션을 처리하기 전에 \", React.createElement(_components.strong, null, \"다양한 작업\"), \"을 할 수 있다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.p, null, \"다양한 작업들의 예시는 이렇다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"기존 요청을 취소 처리하거나 불필요한 중복 요청을 방지할 수 있다.\"), \"\\n\", React.createElement(_components.li, null, \"비동기 작업을 처리하는데 효과적이다.\"), \"\\n\", React.createElement(_components.li, null, \"특정 액션이 발생했을 때 다른 액션을 발생시키거나, 리덕스와 관계없는 코드 실행시 사용한다.\"), \"\\n\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.p, null, \"즉, Redux-saga를 이용하면 보다 간편하면서도 깊게 state의 흐름을 제어할 수 있다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"redux-saga를-도입한-이유\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#redux-saga%EB%A5%BC-%EB%8F%84%EC%9E%85%ED%95%9C-%EC%9D%B4%EC%9C%A0\",\n    \"aria-label\": \"redux saga를 도입한 이유 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Redux-saga를 도입한 이유\"), \"\\n\", React.createElement(_components.p, null, \"우리 팀이 Redux-saga를 도입하기로 결정한 이유는 크게 두가지였다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"1-api-호출-로직을-효율적으로-관리할-수-있다\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#1-api-%ED%98%B8%EC%B6%9C-%EB%A1%9C%EC%A7%81%EC%9D%84-%ED%9A%A8%EC%9C%A8%EC%A0%81%EC%9C%BC%EB%A1%9C-%EA%B4%80%EB%A6%AC%ED%95%A0-%EC%88%98-%EC%9E%88%EB%8B%A4\",\n    \"aria-label\": \"1 api 호출 로직을 효율적으로 관리할 수 있다 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"1. api 호출 로직을 효율적으로 관리할 수 있다.\"), \"\\n\", React.createElement(_components.p, null, \"오로지 비동기 작업만을 위해 redux-saga를 쓰는것은 개인적으로 크게 효율적이지 않다고 생각한다.\", React.createElement(_components.br), \"\\n\", React.createElement(_components.code, null, \"async/await\"), \"라는 흘륭한 기능으로 비동기 동작들을 처리할 수 있는데 굳이 코드량을 늘려가며 redux-saga를 도입할 이유가 있을까?\"), \"\\n\", React.createElement(_components.p, null, \"하지만 redux-saga에서는 비동기 동작에 대한 더 세부적인 컨트롤이 가능했다. 예를 들면 사용자의 부주의로 동일한 api를 여러번 호출할 경우, 가장 마지막 호출의 \", React.createElement(_components.code, null, \"response\"), \"만 받아오도록 제어할 수 있다.\"), \"\\n\", React.createElement(_components.p, null, \"무엇보다 api 호출 로직을 saga에서 관리하면서, Presentational 컴포넌트와 Container 컴포넌트의 명확한 분리가 가능해졌다. 또한 같은 api를 다른 페이지에서 호출시 같은 코드를 두번 적어줘야 했다면, api 호출 로직을 Redux-saga로 관리하면서 selector로 데이터 만을 간편하게 가져올 수 있게되었다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"2-callback-함수를-action-payload로-넘길-수-있다\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#2-callback-%ED%95%A8%EC%88%98%EB%A5%BC-action-payload%EB%A1%9C-%EB%84%98%EA%B8%B8-%EC%88%98-%EC%9E%88%EB%8B%A4\",\n    \"aria-label\": \"2 callback 함수를 action payload로 넘길 수 있다 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"2. callback 함수를 action payload로 넘길 수 있다.\"), \"\\n\", React.createElement(_components.p, null, \"공통으로 사용할 모달창을 구현했다. 이 모달창에서 확인 버튼을 누르면 모달창을 호출한 페이지에서 그 사실을 알아야 하는데 그 로직을 어떻게 구현할지에 대해 많은 고민을 했다.\"), \"\\n\", React.createElement(_components.p, null, \"모달창을 열 때 페이지의 callback 함수를 함께 넘겨주는 것이 가장 좋은 방법이지만, redux에서는 callback을 \", React.createElement(_components.code, null, \"state\"), \"값으로 저장하는 것을 권장하지 않는다.(\", React.createElement(_components.a, {\n    href: \"https://redux.js.org/faq/organizing-state#can-i-put-functions-promises-or-other-non-serializable-items-in-my-store-state\"\n  }, \"# Can I put functions, promises, or other non-serializable items in my store state?\"), \" 참고)\"), \"\\n\", React.createElement(_components.p, null, \"이때 redux-saga를 사용하면 callback값을 redux-saga에서 처리해주기 때문에 action \", React.createElement(_components.code, null, \"payload\"), \"로 callback을 넘길 수 있게되었다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"redux-saga의-동작-원리\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#redux-saga%EC%9D%98-%EB%8F%99%EC%9E%91-%EC%9B%90%EB%A6%AC\",\n    \"aria-label\": \"redux saga의 동작 원리 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Redux-saga의 동작 원리\"), \"\\n\", React.createElement(_components.p, null, \"Redux-saga는 \", React.createElement(_components.strong, null, \"제너레이터 함수\"), \" 문법을 기반으로 비동기 작업을 관리한다. (symbol을 알아보고, generator를 공부한 이유가 여기에 있다.) Redux-saga는 우리가 디스패치 하는 action을 모니터링해서 그에 따라 필요한 작업을 따로 수행할 수 있다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"function* watchGenerator(){\\n    console.log(\\\"모니터링 중...\\\");\\n    let prevAction = null;\\n    while(true){\\n        const action = yield;\\n        console.log(\\\"이전 액션: \\\", prevAction);\\n        prevAction = action;\\n\\n        if(action.type === \\\"HELLO\\\"){\\n            console.log(\\\"안녕\\\");\\n        }\\n    }\\n}\\nconst watch = watcjGenerator();\\nwatch.next();\\n// 모니터링 중...\\n// { value: undefined, done: false}\\nwatch.next({type: \\\"TEST\\\"});\\n// 이전 액션: null\\n// { value: undefined, done: false}\\nwatch.next({ type: \\\"HELLO\\\"});\\n// 이전 액션: {type: \\\"TEST\\\"}\\n// 안녕\\n// {value: undefined, done: false}\\n\")), \"\\n\", React.createElement(_components.p, null, \"위 코드는 Redux-saga가 실제로 action을 어떻게 캐치하고 구분하는지를 비슷하게 흉내낸 코드이다.\"), \"\\n\", React.createElement(_components.p, null, \"앞서 \", React.createElement(_components.a, {\n    href: \"https://leego.github.io/JS/what-is-a-Generator/\"\n  }, \"Generator란 무엇일까? 포스팅\"), \"에서 Generator안에서 \", React.createElement(_components.code, null, \"while(true)\"), \"를 사용하면 무한으로 사용가능한 로직을 만들 수 있다고 했다. Redux-saga에서는 \", React.createElement(_components.strong, null, \"실제로 \", React.createElement(_components.code, null, \"while(true)\"), \"를 사용하여 지속적으로 action을 모니터링 하고 action이 발생하면 해당하는 로직을 수행한다.\")), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"redux-saga의-헬퍼-함수\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#redux-saga%EC%9D%98-%ED%97%AC%ED%8D%BC-%ED%95%A8%EC%88%98\",\n    \"aria-label\": \"redux saga의 헬퍼 함수 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"redux-saga의 헬퍼 함수\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"delay\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#delay\",\n    \"aria-label\": \"delay permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"delay\"), \"\\n\", React.createElement(_components.p, null, \"설정된 시간 이후에 \", React.createElement(_components.code, null, \"resolve\"), \"를 하는 \", React.createElement(_components.code, null, \"Promise\"), \" 객체를 리턴한다.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"put\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#put\",\n    \"aria-label\": \"put permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"put\"), \"\\n\", React.createElement(_components.p, null, \"특정 액션을 \", React.createElement(_components.code, null, \"dispatch\"), \"한다. (ex: \", React.createElement(_components.code, null, \"put({type: 'INCREMEMT})\"), \")\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"call\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#call\",\n    \"aria-label\": \"call permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"call\"), \"\\n\", React.createElement(_components.p, null, \"주어진 함수를 실행한다. (ex: \", React.createElement(_components.code, null, \"call(delay, 1000)\"), \")\"), \"\\n\", React.createElement(_components.p, null, \"미들웨어가 \", React.createElement(_components.code, null, \"Promise\"), \"의 \", React.createElement(_components.code, null, \"resolve\"), \"를 기다리게 하기 때문에 동기함수(주로 api 호출)에 사용한다.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"take\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#take\",\n    \"aria-label\": \"take permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"take\"), \"\\n\", React.createElement(_components.p, null, \"들어오는 특정 액션을 처리한다. 한번 실행되고 이벤트가 삭제된다.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"takeevery\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#takeevery\",\n    \"aria-label\": \"takeevery permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"takeEvery\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"모든 리퀘스트에 대해\"), \" task를 실행한다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"function* watchFetchData(){\\n    yield takeEvery('FETCH_REQUESTED', fetchData)\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"만약 \", React.createElement(_components.code, null, \"fetchData\"), \" task가 시작되었을때 이미 이전 task가 실행중이라면, 이전 task는 자동으로 취소된다.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"fork\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#fork\",\n    \"aria-label\": \"fork permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"fork\"), \"\\n\", React.createElement(_components.p, null, \"백그라운드에서 task가 실행된다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"function* loginFlow() {\\n  while (true) {\\n    const {user, password} = yield take('LOGIN_REQUEST')\\n    const token = yield call(authorize, user, password)\\n    if (token) {\\n      yield call(Api.storeItem, {token})\\n      yield take('LOGOUT')\\n      yield call(Api.clearItem, 'token')\\n    }\\n  }\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"위와 같은 로그인 로직이 있다. 이 로직은 로그인을 하고(\", React.createElement(_components.code, null, \"'LOGIN_REQUEST'\"), \"), 사용자 인증을 거치면 \", React.createElement(_components.code, null, \"'LOGOUT'\"), \" task를 기다린다.\", React.createElement(_components.br), \"\\n\", \"만약 \", React.createElement(_components.code, null, \"'LOGIN_REQUEST'\"), \"가 실행되고, token을 받아오는 중에 사용자가 \", React.createElement(_components.code, null, \"'LOGOUT'\"), \" task를 실행한다면 어떻게 될까? \", React.createElement(_components.code, null, \"'LOGOUT'\"), \" task는 무시된다. \", React.createElement(_components.code, null, \"call\"), \"은 봉쇄(blocking) effect라서 호출이 종료되기 전까지는 아무것도 수행할 수 없기 때문이다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"function* loginFlow() {\\n  while (true) {\\n    ...\\n    try {\\n      // non-blocking call, what's the returned value here ?\\n      const ?? = yield fork(authorize, user, password)\\n      ...\\n    }\\n    ...\\n  }\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"이럴때 \", React.createElement(_components.code, null, \"fork\"), \"를 사용해주면, \", React.createElement(_components.strong, null, \"task는 백그라운드에서 시작\"), \"되고, 호출자는 \", React.createElement(_components.code, null, \"fork\"), \"된 task가 종료될 떄까지 기다리지 않고 플로우를 계속해서 진행한다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.p, null, \"❗ 단, \", React.createElement(_components.code, null, \"fork\"), \"는 백그라운드에서 실행되기 때문에 token을 받아올 수 없다. 이럴 경우에는 token을 \", React.createElement(_components.code, null, \"authorize\"), \" 안에서 받아와야한다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"function* authorize(user, password) {\\n  try {\\n    const token = yield call(Api.authorize, user, password)\\n    ...\\n  } catch(error) {\\n    ...  \\n    }\\n}\\n\\nfunction* loginFlow() {\\n  while (true) {\\n    ...    \\n        yield fork(authorize, user, password)\\n    ...\\n  }\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"그러면 위와 같은 로직이 된다.\"), \"\\n\", React.createElement(_components.p, null, \"( 만약 \", React.createElement(_components.code, null, \"finally\"), \" 구간에서 제너레이터가 취소된건지 확인이 필요하다면 \", React.createElement(_components.code, null, \"yield cancelled()\"), \" 으로 확인가능하다. )\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"cancle\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#cancle\",\n    \"aria-label\": \"cancle permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"cancle\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"fork\"), \"된 task를 취소시킨다. (ex: \", React.createElement(_components.code, null, \"yield cancel(task)\"), \")\"), \"\\n\", React.createElement(_components.p, null, \"제너레이터를 \", React.createElement(_components.code, null, \"finally\"), \" 구간으로 가게한다. 이때 취소한 task 하위에 다른 task가 포함되어 있다면 모두 취소된다.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"all\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#all\",\n    \"aria-label\": \"all permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"all\"), \"\\n\", React.createElement(_components.p, null, \"이 함수를 사용해서 제너레이터 함수를 배열의 형태로 넣어주면, 제너레이터 함수들이 병행적으로 동시에 실행되고, 전부 \", React.createElement(_components.code, null, \"resolve\"), \"될때까지 기다린다. (\", React.createElement(_components.code, null, \"Promise.all\"), \"과 비슷하다.)\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"참고-\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EC%B0%B8%EA%B3%A0-\",\n    \"aria-label\": \"참고  permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"참고 📌\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://mskims.github.io/redux-saga-in-korean/\"\n  }, \"https://mskims.github.io/redux-saga-in-korean/\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://kyounghwan01.github.io/blog/React/redux/redux-saga/#\"\n  }, \"https://kyounghwan01.github.io/blog/React/redux/redux-saga/#\"), React.createElement(_components.a, {\n    href: \"https://kyounghwan01.github.io/blog/React/redux/redux-saga/#%E1%84%8B%E1%85%B1-%E1%84%8F%E1%85%A9%E1%84%83%E1%85%B3%E1%84%8B%E1%85%B4-%E1%84%8C%E1%85%A5%E1%86%AB%E1%84%8E%E1%85%A6%E1%84%8C%E1%85%A5%E1%86%A8%E1%84%8B%E1%85%B5%E1%86%AB-%E1%84%89%E1%85%B5%E1%86%AF%E1%84%92%E1%85%A2%E1%86%BC-%E1%84%80%E1%85%AA%E1%84%8C%E1%85%A5%E1%86%BC\"\n  }, \"위-코드의-전체적인-실행-과정\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/ego/Documents/go/ego-blog/content/blog/REACT/lets-explore-redux-saga.mdx\";\nimport * as React from \"react\";\nimport {Link, graphql} from \"gatsby\";\nimport {HiChevronRight} from \"@react-icons/all-files/hi/HiChevronRight\";\nimport {HiChevronLeft} from \"@react-icons/all-files/hi/HiChevronLeft\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport {Tag, TagBox} from \"../components/Tag\";\nimport {CodeBlock} from \"../components/Block/CodeBlock\";\nimport Comment from \"../components/Post/Comment\";\nimport TableOfContents from \"../components/TableOfContents/TableOfContents\";\nconst components = {\n  img: ({src, alt}) => React.createElement(\"img\", {\n    src: src,\n    alt: alt,\n    className: \"m-auto md:w-3/4\"\n  }),\n  pre: CodeBlock,\n  code: props => React.createElement(\"code\", Object.assign({}, props, {\n    className: \"bg-background-primary text-accent-default bg-opacity-70\"\n  }))\n};\nconst BlogPostTemplate = ({data: {previous, next, site, mdx: post}, location, children}) => {\n  const siteTitle = site.siteMetadata?.title || `Title`;\n  return React.createElement(Layout, {\n    location: location,\n    title: siteTitle\n  }, React.createElement(\"article\", {\n    className: \"blog-post px-8 pt-10\",\n    itemScope: true,\n    itemType: \"http://schema.org/Article\"\n  }, React.createElement(\"header\", {\n    className: \"text-center py-14\"\n  }, React.createElement(\"h1\", {\n    itemProp: \"headline\"\n  }, post.frontmatter.title), React.createElement(\"p\", {\n    className: \"text-accent-default text-xs mt-8\"\n  }, post.frontmatter.date)), React.createElement(\"section\", {\n    className: \"h-fit my-28 text-text-default\",\n    itemProp: \"articleBody\"\n  }, React.createElement(MDXProvider, {\n    components: components\n  }, children)), React.createElement(TagBox, null, post.frontmatter.tags.map(tag => React.createElement(Tag, {\n    key: tag,\n    text: tag\n  }))), React.createElement(\"hr\", {\n    className: \"my-10\"\n  }), React.createElement(Comment), React.createElement(\"footer\")), React.createElement(\"nav\", {\n    className: \"blog-post-nav px-8 mt-8\"\n  }, React.createElement(\"ul\", {\n    className: \"flex flex-wrap justify-between list-none p-0 text-text-default\"\n  }, previous ? React.createElement(Link, {\n    to: previous.fields.slug,\n    rel: \"prev\"\n  }, React.createElement(\"li\", {\n    className: \"bg-background-primary/50 text-sm p-3 rounded-xl h-fit flex items-center gap-3\"\n  }, React.createElement(HiChevronLeft, {\n    size: 22,\n    className: \"text-accent-default\"\n  }), React.createElement(\"p\", {\n    className: \"max-w-[28rem]\"\n  }, previous.frontmatter.title))) : React.createElement(\"div\"), next && React.createElement(Link, {\n    to: next.fields.slug,\n    rel: \"next\"\n  }, React.createElement(\"li\", {\n    className: \"bg-background-primary/50 text-sm p-3 rounded-xl h-fit flex items-center gap-3\"\n  }, React.createElement(\"p\", {\n    className: \"max-w-[28rem]\"\n  }, next.frontmatter.title), React.createElement(HiChevronRight, {\n    size: 22,\n    className: \"text-accent-default\"\n  }))))), React.createElement(TableOfContents, {\n    contents: post.tableOfContents\n  }));\n};\nexport const Head = ({data: {mdx: post}}) => {\n  return React.createElement(Seo, {\n    title: post.frontmatter.title,\n    description: post.frontmatter.description || post.excerpt\n  });\n};\nBlogPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    mdx(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      tableOfContents\n      frontmatter {\n        title\n        date(formatString: \"YYYY.MM.DD\")\n        description\n        tags\n      }\n    }\n    previous: mdx(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: mdx(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","span","p","strong","blockquote","ul","li","h2","br","code","pre","_provideComponents","components","React","id","style","position","href","className","dangerouslySetInnerHTML","__html","src","width","wrapper","MDXLayout","img","_ref","alt","CodeBlock","BlogPostTemplate","_ref2","_site$siteMetadata","data","previous","next","site","mdx","post","location","children","siteTitle","siteMetadata","title","Layout","itemScope","itemType","itemProp","frontmatter","date","MDXProvider","TagBox","tags","map","tag","Tag","key","text","Comment","Link","to","fields","slug","rel","HiChevronLeft","size","HiChevronRight","TableOfContents","contents","tableOfContents","Head","_ref3","Seo","description","excerpt","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}