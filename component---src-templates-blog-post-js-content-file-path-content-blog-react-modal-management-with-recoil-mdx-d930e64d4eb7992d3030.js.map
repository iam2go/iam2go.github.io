{"version":3,"file":"component---src-templates-blog-post-js-content-file-path-content-blog-react-modal-management-with-recoil-mdx-d930e64d4eb7992d3030.js","mappings":"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","sources":["webpack://leego.dev.log/./content/blog/REACT/\bmodal-management-with-recoil.mdx","webpack://leego.dev.log/./src/templates/blog-post.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    h1: \"h1\",\n    a: \"a\",\n    span: \"span\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"이전 포스팅에서 context API, redux를 사용한 모달 관리에 대해서 소개했었다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"// store/modalSlice.js\\n\\nimport { createSlice } from \\\"@reduxjs/toolkit\\\";\\n\\nconst initialState = [];\\n\\nexport const modalSelector = (state) => state.modal;\\n\\nexport const modalSlice = createSlice({\\n  name: \\\"modal\\\",\\n  initialState,\\n  reducers: {\\n    openModal: (state, action) => {\\n      const { type, props } = action.payload;\\n      return state.concat({ type, props });\\n    },\\n    closeModal: (state, action) => {\\n      state.pop();\\n    },\\n  },\\n});\\n\\nexport const { openModal, closeModal } = modalSlice.actions;\\n\")), \"\\n\", React.createElement(_components.p, null, \"모달이 닫히면 해당 모달의 상태는 리셋되기 때문에 굳이 \", React.createElement(_components.code, null, \"initalState\"), \" 의 모달 상태를 들고 있을 이유가 없다 판단했고, 현재 열려있는 모달의 상태만을 관리하는 방식을 선택했다.\\n구체적으로는, \", React.createElement(_components.code, null, \"type\"), \" 과 \", React.createElement(_components.code, null, \"props\"), \" 를 가진 모달 객체를 배열에 차곡차곡 쌓아주고, 배열에 담긴 모달만을 랜더링 하는 방식으로 구현했다.\"), \"\\n\", React.createElement(_components.p, null, \"최근 새로운 프로젝트의 초기 셋팅을 맡았는데, 이 프로젝트에 전역 상태 관리 라이브러리로 \", React.createElement(_components.code, null, \"recoil\"), \"을 도입해보기로 했다.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"redux\"), \" 가 중앙집중식으로 상태를 관리했다면 \", React.createElement(_components.code, null, \"recoil\"), \" 은 \", React.createElement(_components.code, null, \"Atom\"), \" 이라는 작은 단위의 상태를 만들어 분산식으로 상태를 관리한다. 위에서 설명한 방식은 여러 모달 객체를 하나의 배열 안에 전부 가지고 있는 것이기 때문에 \", React.createElement(_components.code, null, \"recoil\"), \" 의 지향점과 맞지 않는다고 판단하여 다른 방식을 고려하게 되었다.\"), \"\\n\", React.createElement(_components.p, null, \"(정확히는 기존의 모달 관리 로직의 큰 틀은 유지하되, 상태 관리 방식만 recoil에 맞춰 변경하기로 했다.)\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"recoil\"), \"의 지향점에 따른다면, 모달마다 상태를 저장하는 개별 atom을 가지고 있어야 하겠다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"const firstModalState = atom<Modal>({\\n    key: \\\"firstModal\\\",\\n    default: {\\n    params: null\\n  }\\n});\\n\\nconst secondModalState = atom<Modal>({\\n    key: \\\"secondeModal\\\",\\n    default: {\\n    params: null\\n  }\\n});\\n\")), \"\\n\", React.createElement(_components.p, null, \"하지만 이렇게 개별로 생성해줘야 한다면, 구조 변경이 번거롭고, 무엇보다 key관리가 힘들다. \", React.createElement(_components.code, null, \"recoil\"), \"에서는 이렇게 형태가 동일한 여러 개의 상태가 필요한 경우를 위해 \", React.createElement(_components.code, null, \"atomFamily\"), \"를 제공한다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"atomfamily\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#atomfamily\",\n    \"aria-label\": \"atomfamily permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"atomFamily\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"atomFamily\"), \"는 쉽게 말해 \", React.createElement(_components.code, null, \"atom\"), \"들의 모음이다. 기본적으로 매개변수를 받아 \", React.createElement(_components.code, null, \"atom\"), \"을 리턴하며 이때 리턴되는 \", React.createElement(_components.code, null, \"atom\"), \"은 독립적인 atom state를 가진다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"const modalState = atomFamily<Modal, string>({\\n  key: 'modalState',\\n  default: (id) => ({\\n    id,\\n    params: null\\n  })\\n\")), \"\\n\", React.createElement(_components.p, null, \"만약 상태를 구독한다면 아래와 같다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"const {isOpen, params} = useRecoilValue(madalState('first'));\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"atomFamily\"), \"를 호출할 때 넣어주는 매개변수가 생성되는 \", React.createElement(_components.code, null, \"atom\"), \"의 고유한 key값이 되는 셈이다.\"), \"\\n\", React.createElement(_components.p, null, \"각각의 모달 상태는 \", React.createElement(_components.code, null, \"atomFamily\"), \"를 통해 관리한다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"ModalContainer\"), \"에서 열려있는 모달만 랜더링해 줄 것이기 때문에, 열려있는 모달을 담은 배열이 추가로 필요하다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"export const modalListState = atom<string[]>({\\n  key: 'modalListState',\\n  default: []\\n});\\n\")), \"\\n\", React.createElement(_components.p, null, \"이 배열에는 모달의 \", React.createElement(_components.code, null, \"id\"), \"값만을 넣어준다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"// ModalContainer.ts\\n\\nconst MODAL_COMPONENTS: Record<string, () => React.ReactElement> = {\\n  test: TestModal,\\n  test2: Test2Modal\\n};\\n\\nfunction ModalContainer() {\\n  const modalList = useRecoilValue(modalListState);\\n  const renderModal = modalList.map((id) => {\\n    const ModalComponent = MODAL_COMPONENTS[id];\\n    return <ModalComponent key={id} />;\\n  });\\n  return createPortal(\\n    <>\\n      {renderModal}\\n    </>,\\n    document.getElementById('modal') as HTMLElement\\n  );\\n}\\n\\nexport default ModalContainer;\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"ModalContainer\"), \"는 기존과 크게 달라진 점은 없다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"selectorfamily\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#selectorfamily\",\n    \"aria-label\": \"selectorfamily permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"selectorFamily\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"selctor\"), \"는 redux의 \", React.createElement(_components.code, null, \"reselect\"), \"와 유사하게 \", React.createElement(_components.code, null, \"atom\"), \"이나 다른 \", React.createElement(_components.code, null, \"selector\"), \"를 기반으로 파생된 상태를 만든다. 하지만 recoil의 \", React.createElement(_components.code, null, \"selector\"), \"는 \", React.createElement(_components.code, null, \"set\"), \" 매서드를 통해 값의 변경도 가능하다.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"atomFamily\"), \"와 동일하게 \", React.createElement(_components.code, null, \"selectorFamily\"), \"는 \", React.createElement(_components.code, null, \"selector\"), \"의 모음으로, 매개변수를 받아 \", React.createElement(_components.code, null, \"selector\"), \"를 리턴한다.\"), \"\\n\", React.createElement(_components.p, null, \"여기서는 \", React.createElement(_components.code, null, \"selectorFamily\"), \"를 통해 열려있는 모달 ID를 담은 \", React.createElement(_components.code, null, \"modalListState\"), \"와 각각의 모달 상태값을 담은 \", React.createElement(_components.code, null, \"modalState\"), \"를 동시에 관리해 줄 것이다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"export const modalSelector = selectorFamily<Modal, string>({\\n  key: 'modalSelector',\\n  get:\\n    (id) => get(modalState(id)),\\n  set:\\n    (id) =>\\n    ({ get, set, reset }, newValue) => {\\n      if (newValue instanceof DefaultValue) {\\n        set(modalListState, (prev) => prev.filter((modalId) => modalId !== id));\\n        reset(modalState(id));\\n        return;\\n      }\\n\\n      set(modalState(id), newValue);\\n\\n      if (get(modalListState).find((id) => id === newValue.id)) return;\\n      set(modalListState, (prev) => [...prev, newValue.id]);\\n    }\\n});\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"get\"), \"을 통해 매개변수를 key값으로 하는 다이얼로그의 상태를 가져온다.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"set\"), \"을 통해서는 새로운 상태값으로 업데이트해주거나, 상태를 리셋해 준다.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"set\"), \"에서는 값을 업데이트할 때와 초기화할 때 모두 두 번째 매개변수인 \", React.createElement(_components.code, null, \"newValue\"), \"로 변경할 값을 받아온다.\\n따라서 \", React.createElement(_components.code, null, \"newValue\"), \" 의 타입이 \", React.createElement(_components.code, null, \"DefaultValue\"), \" 인지를 확인하여 지금 값을 업데이트하는 상황인지, 초기화하는 상황인지를 판단해야 한다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"if (newValue instanceof DefaultValue) {\\n       set(modalListState, (prev) => prev.filter((modalId) => modalId !== id));\\n       reset(modalState(id));\\n       return;\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"newValue\"), \" 의 타입이 \", React.createElement(_components.code, null, \"DefaultValue\"), \"라면 \", React.createElement(_components.code, null, \"useResetRecoilState\"), \" 를 통해 값을 초기화하는 상황이다.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"modalListState\"), \" 에서 매개변수로 받은 id의 값을 제거해 준 후, 해당 모달의 상태를 reset 시켜준다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"set(modalState(id), newValue);\\n\\nif (get(modalListState).find((id) => id === newValue.id)) return;\\nset(modalListState, (prev) => [...prev, newValue.id]);\\n\")), \"\\n\", React.createElement(_components.p, null, \"값을 업데이트해주는 상황 즉, 모달을 여는 상황이라면\"), \"\\n\", React.createElement(_components.p, null, \"먼저 새로운 값으로 모달의 상태를 업데이트해주고, \", React.createElement(_components.code, null, \"modalListState\"), \"에 id를 넣어준다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"usemodal\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#usemodal\",\n    \"aria-label\": \"usemodal permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"useModal\"), \"\\n\", React.createElement(_components.p, null, \"모달을 열고 닫는 로직을 공통으로 사용할 수 있도록 \", React.createElement(_components.code, null, \"useModal\"), \" 커스텀 훅을 만들어 주었다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"useModal\"), \" 구현시 두 가지 방식을 놓고 고민했었는데,\"), \"\\n\", React.createElement(_components.p, null, \"1️. \", React.createElement(_components.code, null, \"useModal\"), \"호출시 모달의 \", React.createElement(_components.code, null, \"id\"), \"를 전달받아 해당 \", React.createElement(_components.code, null, \"id\"), \"를 가진 모달에 대한 매서드를 제공해 주는 방식과,\"), \"\\n\", React.createElement(_components.p, null, \"2️. 하나의 \", React.createElement(_components.code, null, \"useModal\"), \" 훅이 여러 모달을 관리할 수 있도록 모달 관련 매서드만을 제공하고, 제공한 매서드를 호출할 때 \", React.createElement(_components.code, null, \"id\"), \"값을 넣어주는 방식이었다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.p, null, \"먼저, 첫 번째 방식의 구현 코드는 아래와 같다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"import { modalSelector } from '@/recoil/modal';\\nimport { useCallback } from 'react';\\nimport { useRecoilState, useResetRecoilState } from 'recoil';\\n\\nfunction useModal(type) {\\n  const [state, setState] = useRecoilState(modalSelector(id));\\n  const closeModal = useResetRecoilState(modalSelector(id));\\n\\n  const handleOpenModal = useCallback(\\n    (props = null) => {\\n      setState({ id, params });\\n    },\\n    [type, setState]\\n  );\\n\\n  return { state, open: handleOpenModal, close: closeModal };\\n}\\n\\nexport default useModal;\\n\")), \"\\n\", React.createElement(_components.p, null, \"컴포넌트에서 사용할 때는 이 방식이 조금 더 코드가 간편하고 직관적이다.\"), \"\\n\", React.createElement(_components.p, null, \"다만 만약 하나의 컴포넌트에서 여러 개의 모달을 호출할 경우\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"... \\nconst testModal = useModal('test');\\nconst anotherModal = useModal('another');\\n\\n...\\n\\ntestModal.open();\\nanotherModal.open();\\n\")), \"\\n\", React.createElement(_components.p, null, \"위와 같이 모달의 개수만큼 \", React.createElement(_components.code, null, \"useModal\"), \"을 호출해줘야 하는 단점이 있다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.p, null, \"두 번째 방식은 \", React.createElement(_components.code, null, \"openModal\"), \" 과 \", React.createElement(_components.code, null, \"closeModal\"), \" 호출 시에 id를 받아서 상태를 설정하기 위해 \", React.createElement(_components.code, null, \"useRecoilCallback\"), \" 을 사용하여 직접 \", React.createElement(_components.code, null, \"set\"), \" 과 \", React.createElement(_components.code, null, \"reset\"), \" 함수를 다룬다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"import { Modal, ModalParams, modalSelector, ModalType } from '@/recoil/modal';\\nimport { useCallback } from 'react';\\nimport { useRecoilCallback } from 'recoil';\\n\\nfunction useModal() {\\n  const setModal = useRecoilCallback(\\n    ({ set }) =>\\n      (id: string, value: Modal) => {\\n        set(modalSelector(id), value);\\n      },\\n    []\\n  );\\n\\n  const closeModal = useRecoilCallback(\\n    ({ reset }) =>\\n      (id: string) => {\\n        reset(modalSelector(id));\\n      },\\n    []\\n  );\\n\\n  const handleOpenModal = useCallback(\\n    (id: string, params: ModalParams = null) => {\\n            const value = {\\n                id,\\n                params\\n            };\\n      setModal(id, value);\\n    },\\n    [setModal]\\n  );\\n\\n  return { openModal: handleOpenModal, closeModal };\\n}\\n\\nexport default useModal;\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"const {openDialog, closeDialog} = useModal();\\n\\n... \\n\\nopenDialog('test');\\nopenDialog('another');\\n\")), \"\\n\", React.createElement(_components.p, null, \"컴포넌트에서 사용 시에는 위와 같이 매서드를 호출할 때 id만 전달해 주면 된다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"타입-엄격하게-설정하기\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%ED%83%80%EC%9E%85-%EC%97%84%EA%B2%A9%ED%95%98%EA%B2%8C-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0\",\n    \"aria-label\": \"타입 엄격하게 설정하기 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"타입 엄격하게 설정하기\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"모달-컴포넌트-메모이제이션-강제하기\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EB%AA%A8%EB%8B%AC-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EB%A9%94%EB%AA%A8%EC%9D%B4%EC%A0%9C%EC%9D%B4%EC%85%98-%EA%B0%95%EC%A0%9C%ED%95%98%EA%B8%B0\",\n    \"aria-label\": \"모달 컴포넌트 메모이제이션 강제하기 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"모달 컴포넌트 메모이제이션 강제하기\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"// ModalContainer.ts\\n\\nconst MODAL_COMPONENTS: Record<string, () => React.ReactElement> = {\\n  test: TestModal,\\n  test2: Test2Modal\\n};\\n\\nfunction ModalContainer() {\\n  const modalList = useRecoilValue(modalListState);\\n  const renderModal = modalList.map((id) => {\\n    const ModalComponent = MODAL_COMPONENTS[id];\\n    return <ModalComponent key={id} />;\\n  });\\n  return createPortal(\\n    <>\\n      {renderModal}\\n    </>,\\n    document.getElementById('modal') as HTMLElement\\n  );\\n}\\n\\nexport default ModalContainer;\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"ModalContainer\"), \" 를 다시 살펴보면 \", React.createElement(_components.code, null, \"modalList\"), \"에 변경이 일어나는 경우 ModalComponent 전체가 리랜더링 된다. 이는 각 모달 컴포넌트를 \", React.createElement(_components.code, null, \"React.memo\"), \"로 메모이제이션 해주면 해결 가능하다.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"React.memo\"), \" 로 메모이제이션 된 컴포넌트만 \", React.createElement(_components.code, null, \"MODAL_COMPONENTS\"), \" 에 추가될 수 있도록 \", React.createElement(_components.code, null, \"MODAL_COMPONENTS\"), \"타입을 변경해 주었다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"const MODAL_COMPONENTS: Record<string, React.MemoExoticComponent<() => React.ReactElement>> = {\\n  test: TestModal,\\n  test2: Test2Modal\\n};\\n\")), \"\\n\", React.createElement(_components.p, null, \"(현재 프로젝트에서는 각 모달 컴포넌트들이 복잡한 로직을 가지고 있기 때문에 위처럼 메모이제이션을 강제했지만, 그렇지 않은 경우에는 메모이제이션 여부를 자유롭게 설정할 수 있도록 하는 것이 더 바람직할 수 있다.)\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"정의한-모달-id만-사용하도록-타입-정의하기\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EC%A0%95%EC%9D%98%ED%95%9C-%EB%AA%A8%EB%8B%AC-id%EB%A7%8C-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8F%84%EB%A1%9D-%ED%83%80%EC%9E%85-%EC%A0%95%EC%9D%98%ED%95%98%EA%B8%B0\",\n    \"aria-label\": \"정의한 모달 id만 사용하도록 타입 정의하기 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"정의한 모달 ID만 사용하도록 타입 정의하기\"), \"\\n\", React.createElement(_components.p, null, \"지금까지는 모달의 id 타입을 그냥 \", React.createElement(_components.code, null, \"'string'\"), \" 으로 정의했지만,\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"MODAL_COMPONENTS\"), \" 에 정의하지 않은 다이얼로그를 호출할 시에는 타입에러가 발생하도록 더 엄격한 타입정의가 필요했다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"type ModalKeys = keyof typeof MODAL_COMPONENTS;\\n\")), \"\\n\", React.createElement(_components.p, null, \"위처럼 정의하면 해결될 것 같지만, 실제로는 \", React.createElement(_components.code, null, \"'string'\"), \" 타입이 되어버린다.\"), \"\\n\", React.createElement(_components.p, null, \"이 문제는 typescript 4.9 버전부터 제공하는 \", React.createElement(_components.code, null, \"satisfies\"), \" 연산자를 사용하여 해결했다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"const MODAL_COMPONENTS = {\\n  test: TestModal,\\n  test2: Test2Modal\\n} satisfies Record<string, React.MemoExoticComponent<() => React.ReactElement>>;\\n\")), \"\\n\", React.createElement(\"img\", {\n    src: \"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FHL40U%2Fbtsdwvl2J3q%2FhjTUp9aMys1IrJrvsG6qU1%2Fimg.png\",\n    width: \"524\",\n    className: \"m-auto\"\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"satisfies\"), \"를 사용하면 \", React.createElement(_components.code, null, \"MODAL_COMPONENTS\"), \"에 직접적인 속성 추가에 대해서는 자유로우면서도,\\n\", React.createElement(_components.code, null, \"MODAL_COMPONENTS\"), \"에 정의된 속성만 사용할 수 있도록 최대한 구체적인 타입을 정의의 해 준다.\"), \"\\n\", React.createElement(_components.p, null, \"이제 \", React.createElement(_components.code, null, \"openDialog('teest')\"), \" 를 호출하면 타입 에러를 뱉어내게 된다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"최종-코드\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EC%B5%9C%EC%A2%85-%EC%BD%94%EB%93%9C\",\n    \"aria-label\": \"최종 코드 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"✨최종 코드\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"// ModalContainer.ts\\n\\nconst MODAL_COMPONENTS: Record<string, () => React.ReactElement> = {\\n  test: TestModal,\\n  test2: Test2Modal\\n};\\n\\nfunction ModalContainer() {\\n  const modalList = useRecoilValue(modalListState);\\n  const renderModal = modalList.map((id) => {\\n    const ModalComponent = MODAL_COMPONENTS[id];\\n    return <ModalComponent key={id} />;\\n  });\\n  return createPortal(\\n    <>\\n      {renderModal}\\n    </>,\\n    document.getElementById('modal') as HTMLElement\\n  );\\n}\\n\\nexport default ModalContainer;\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"// recoil/modal.ts\\n\\nimport { atom, atomFamily, DefaultValue, selectorFamily } from 'recoil';\\n\\nexport type ModalType = \\nexport type ModalParams = Record<string, unknown> | null;\\nexport type Modal = {\\n  id: ModalType;\\n  isOpen: boolean;\\n  params: ModalParams;\\n};\\n\\nexport const modalListState = atom<ModalType[]>({\\n  key: 'modalListState',\\n  default: []\\n});\\n\\nconst modalState = atomFamily<Modal, ModalType>({\\n  key: 'modalState',\\n  default: (id) => ({\\n    id,\\n    params: null\\n  })\\n\\nexport const modalSelector = selectorFamily<Modal, ModalType>({\\n  key: 'modalSelector',\\n  get:\\n    (id) => get(modalState(id)),\\n  set:\\n    (id) =>\\n    ({ get, set, reset }, newValue) => {\\n      if (newValue instanceof DefaultValue) {\\n        set(modalListState, (prev) => prev.filter((modalId) => modalId !== id));\\n        reset(modalState(id));\\n        return;\\n      }\\n\\n      set(modalState(id), newValue);\\n\\n      if (get(modalListState).find((id) => id === newValue.id)) return;\\n      set(modalListState, (prev) => [...prev, newValue.id]);\\n    }\\n});\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"// useModal.ts\\n\\nimport { Modal, ModalParams, modalSelector, ModalType } from '@/recoil/modal';\\nimport { useCallback } from 'react';\\nimport { useRecoilCallback } from 'recoil';\\n\\nfunction useModal() {\\n  const setModal = useRecoilCallback(\\n    ({ set }) =>\\n      (id: ModalType, value: Modal) => {\\n        set(modalSelector(id), value);\\n      },\\n    []\\n  );\\n\\n  const closeModal = useRecoilCallback(\\n    ({ reset }) =>\\n      (id: ModalType) => {\\n        reset(modalSelector(id));\\n      },\\n    []\\n  );\\n\\n  const handleOpenModal = useCallback(\\n    (id: ModalType, params: ModalParams = null) => {\\n            const value = {\\n                id,\\n                params\\n            };\\n      setModal(id, value);\\n    },\\n    [setModal]\\n  );\\n\\n  return { openModal: handleOpenModal, closeModal };\\n}\\n\\nexport default useModal;\\n\")), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"참고-\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EC%B0%B8%EA%B3%A0-\",\n    \"aria-label\": \"참고  permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"참고 📌\"), \"\\n\", React.createElement(_components.p, null, \"아이디어를 얻은 곳\\n\", React.createElement(_components.a, {\n    href: \"https://betterprogramming.pub/implementing-list-items-with-react-and-recoil-c58f75e307dc\"\n  }, \"Implementing List Items With React and Recoil\")), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"satisfies\"), \"에 대해 참고한 곳\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-4-9.html\"\n  }, \"Documentation - TypeScript 4.9\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://medium.com/@cefn/typescript-satisfies-6ba52e74cb2f\"\n  }, \"Typescript’s new ‘satisfies’ operator\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/ego/Documents/go/ego-blog/content/blog/REACT/\\bmodal-management-with-recoil.mdx\";\nimport * as React from \"react\";\nimport {Link, graphql} from \"gatsby\";\nimport {HiChevronRight} from \"@react-icons/all-files/hi/HiChevronRight\";\nimport {HiChevronLeft} from \"@react-icons/all-files/hi/HiChevronLeft\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport {Tag, TagBox} from \"../components/Tag\";\nimport {CodeBlock} from \"../components/Block/CodeBlock\";\nimport Comment from \"../components/Post/Comment\";\nimport TableOfContents from \"../components/TableOfContents/TableOfContents\";\nconst components = {\n  img: ({src, alt}) => React.createElement(\"img\", {\n    src: src,\n    alt: alt,\n    className: \"m-auto md:w-3/4\"\n  }),\n  pre: CodeBlock,\n  code: props => React.createElement(\"code\", Object.assign({}, props, {\n    className: \"bg-background-primary text-accent-default bg-opacity-70\"\n  }))\n};\nconst BlogPostTemplate = ({data: {previous, next, site, mdx: post}, location, children}) => {\n  const siteTitle = site.siteMetadata?.title || `Title`;\n  return React.createElement(Layout, {\n    location: location,\n    title: siteTitle\n  }, React.createElement(\"article\", {\n    className: \"blog-post px-8 pt-10\",\n    itemScope: true,\n    itemType: \"http://schema.org/Article\"\n  }, React.createElement(\"header\", {\n    className: \"text-center py-14\"\n  }, React.createElement(\"h1\", {\n    itemProp: \"headline\"\n  }, post.frontmatter.title), React.createElement(\"p\", {\n    className: \"text-accent-default text-xs mt-8\"\n  }, post.frontmatter.date)), React.createElement(\"section\", {\n    className: \"h-fit my-28 text-text-default\",\n    itemProp: \"articleBody\"\n  }, React.createElement(MDXProvider, {\n    components: components\n  }, children)), React.createElement(TagBox, null, post.frontmatter.tags.map(tag => React.createElement(Tag, {\n    key: tag,\n    text: tag\n  }))), React.createElement(\"hr\", {\n    className: \"my-10\"\n  }), React.createElement(Comment), React.createElement(\"footer\")), React.createElement(\"nav\", {\n    className: \"blog-post-nav px-8 mt-8\"\n  }, React.createElement(\"ul\", {\n    className: \"flex flex-wrap justify-between list-none p-0 text-text-default\"\n  }, previous ? React.createElement(Link, {\n    to: previous.fields.slug,\n    rel: \"prev\"\n  }, React.createElement(\"li\", {\n    className: \"bg-background-primary/50 text-sm p-3 rounded-xl h-fit flex items-center gap-3\"\n  }, React.createElement(HiChevronLeft, {\n    size: 22,\n    className: \"text-accent-default\"\n  }), React.createElement(\"p\", {\n    className: \"max-w-[28rem]\"\n  }, previous.frontmatter.title))) : React.createElement(\"div\"), next && React.createElement(Link, {\n    to: next.fields.slug,\n    rel: \"next\"\n  }, React.createElement(\"li\", {\n    className: \"bg-background-primary/50 text-sm p-3 rounded-xl h-fit flex items-center gap-3\"\n  }, React.createElement(\"p\", {\n    className: \"max-w-[28rem]\"\n  }, next.frontmatter.title), React.createElement(HiChevronRight, {\n    size: 22,\n    className: \"text-accent-default\"\n  }))))), React.createElement(TableOfContents, {\n    contents: post.tableOfContents\n  }));\n};\nexport const Head = ({data: {mdx: post}}) => {\n  return React.createElement(Seo, {\n    title: post.frontmatter.title,\n    description: post.frontmatter.description || post.excerpt\n  });\n};\nBlogPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    mdx(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      tableOfContents\n      frontmatter {\n        title\n        date(formatString: \"YYYY.MM.DD\")\n        description\n        tags\n      }\n    }\n    previous: mdx(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: mdx(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","pre","code","h1","a","span","h2","_provideComponents","components","React","id","style","position","href","className","dangerouslySetInnerHTML","__html","src","width","wrapper","MDXLayout","img","_ref","alt","CodeBlock","BlogPostTemplate","_ref2","_site$siteMetadata","data","previous","next","site","mdx","post","location","children","siteTitle","siteMetadata","title","Layout","itemScope","itemType","itemProp","frontmatter","date","MDXProvider","TagBox","tags","map","tag","Tag","key","text","Comment","Link","to","fields","slug","rel","HiChevronLeft","size","HiChevronRight","TableOfContents","contents","tableOfContents","Head","_ref3","Seo","description","excerpt","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}