{"componentChunkName":"component---src-templates-blog-post-js-content-file-path-content-blog-js-for-of-and-iterator-mdx","path":"/JS/for-of-and-iterator/","result":{"data":{"site":{"siteMetadata":{"title":"leego.dev.log"}},"mdx":{"id":"513a33d2-36f0-57f7-b161-753cce7c025b","excerpt":"for(let value of myArray){ console.log(value);\n}\n\n\nfor-in 문이 객체의 속성들을 순회하기 위한 구문이라면, for-of 문은 배열의 요소들, 즉 data 를 순회하기 위한 구문이다. 정확히는 일반 Object 요소를 제외한 Array, M…","tableOfContents":{"items":[{"url":"#for-of문","title":"for-of문"},{"url":"#iterable의-정의","title":"Iterable의 정의","items":[{"url":"#-iterator가-아닌-symboliterator-메소드를-사용하는-이유는-무엇인가","title":"💡 .iterator()가 아닌 [Symbol.iterator] 메소드를 사용하는 이유는 무엇인가"}]},{"url":"#symboliterator","title":"Symbol.iterator()"},{"url":"#참고","title":"참고📌"}]},"frontmatter":{"title":"for-of와 Iterator","date":"2021.09.05","description":"for-of로 배열은 순회할 수 있지만 일반 객체는 순회할 수 없다. 그 차이는 무엇일까?","tags":["javascript"]}},"previous":{"fields":{"slug":"/JS/lets-explore-symbol/"},"frontmatter":{"title":"Symbol을 알아보자"}},"next":{"fields":{"slug":"/JS/what-is-a-generator/"},"frontmatter":{"title":"Generator란 무엇일까?"}}},"pageContext":{"id":"513a33d2-36f0-57f7-b161-753cce7c025b","previousPostId":"842b499e-eba8-5181-9c57-00fc21eb27ef","nextPostId":"cbb7996a-c604-537d-ab26-5244bd52d035","frontmatter":{"title":"for-of와 Iterator","date":"2021-09-05","tags":["javascript"],"description":"for-of로 배열은 순회할 수 있지만 일반 객체는 순회할 수 없다. 그 차이는 무엇일까?","thumbnail":"./images/js.png"}}},"staticQueryHashes":["2841359383"],"slicesMap":{}}