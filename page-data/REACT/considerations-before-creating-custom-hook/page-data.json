{"componentChunkName":"component---src-templates-blog-post-js-content-file-path-content-blog-react-considerations-before-creating-custom-hook-mdx","path":"/REACT/considerations-before-creating-custom-hook/","result":{"data":{"site":{"siteMetadata":{"title":"leego.dev.log"}},"mdx":{"id":"563d678b-7946-55c9-8a54-6a54a8ce56e1","excerpt":"Building your own Hooks lets you extract component logic into reusable functions. 최근 내가 컴포넌트를 설계할 때 가장 중요하게 생각하는 것은 컴포넌트의 역할이 명확하게 나타나는가 이다. 예를 들어보자. app이라는…","tableOfContents":{"items":[{"url":"#들어가면서","title":"들어가면서🚪"},{"url":"#custom-hook의-장점","title":"custom hook의 장점"},{"url":"#hooks의-규칙","title":"Hooks의 규칙","items":[{"url":"#1-최상위at-the-top-level에서만-hook을-호출해야-한다","title":"1. 최상위(at the Top Level)에서만 Hook을 호출해야 한다."},{"url":"#2-오직-react-함수-내에서-hook을-호출해야-한다","title":"2. 오직 React 함수 내에서 Hook을 호출해야 한다."}]},{"url":"#custom-hooks-생성-시-고려해야-할-점","title":"Custom Hooks 생성 시 고려해야 할 점","items":[{"url":"#합성","title":"합성"},{"url":"#디버깅","title":"디버깅"}]},{"url":"#공통된-값을-다루는가","title":"공통된 값을 다루는가?"},{"url":"#결론-","title":"결론 ✨"},{"url":"#참고-","title":"참고 📌"}]},"frontmatter":{"title":"Custom hook을 만들기 전에 고려해야 할 것들","date":"2021.10.16","description":"use로 시작하는 이름을 붙여주는 것만으로 custom hook이 될 수 없다.","tags":["react","custom-hook"]}},"previous":{"fields":{"slug":"/REACT/profer-usage-of-usecallback-usememo/"},"frontmatter":{"title":"useCallback과 useMemo 제대로 사용하기"}},"next":{"fields":{"slug":"/REACT/introdution-to-useful-custom-hook/"},"frontmatter":{"title":"유용한 Custom hook 소개"}}},"pageContext":{"id":"563d678b-7946-55c9-8a54-6a54a8ce56e1","previousPostId":"225f81d5-a7ba-5f92-b150-3b0ff30eebab","nextPostId":"af7f012e-e90d-59e7-b895-e77401c5dd31","frontmatter":{"title":"Custom hook을 만들기 전에 고려해야 할 것들","date":"2021-10-16","tags":["react","custom-hook"],"description":"use로 시작하는 이름을 붙여주는 것만으로 custom hook이 될 수 없다.","thumbnail":"./images/react.png"}}},"staticQueryHashes":["2841359383"],"slicesMap":{}}