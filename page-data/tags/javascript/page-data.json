{"componentChunkName":"component---src-templates-search-js","path":"/tags/javascript/","result":{"data":{"site":{"siteMetadata":{"title":"leego.dev.log"}},"allMdx":{"nodes":[{"excerpt":"function* generateSequence() { yield 1;\n  yield 2;\n  return 3;\n}\n\n일반 함수는 function 키워드로 시작한다면, 제너레이터 함수는 function* 키워드로 시작한다. (화살표 함수는…","fields":{"slug":"/JS/what-is-a-generator/"},"frontmatter":{"date":"2021.09.06","title":"Generator란 무엇일까?","description":"function* 을 마주친 적이 있다면","tags":["javascript"]}},{"excerpt":"for(let value of myArray){ console.log(value);\n}\n\n\nfor-in 문이 객체의 속성들을 순회하기 위한 구문이라면, for-of 문은 배열의 요소들, 즉 data 를 순회하기 위한 구문이다. 정확히는 일반 Obj…","fields":{"slug":"/JS/for-of-and-iterator/"},"frontmatter":{"date":"2021.09.05","title":"for-of와 Iterator","description":"for-of로 배열은 순회할 수 있지만 일반 객체는 순회할 수 없다. 그 차이는 무엇일까?","tags":["javascript"]}},{"excerpt":"심볼(Symbol) 은 ES6에서부터 추가된 7번째 타입의 값이다. 심볼(Symbol)은 프로그램이 이름 충돌의 위험 없이 속성(property)의 키(key)로 쓰기 위해 생성하고 사용할 수 있는 값이다.\n\nlet newSymbol = Symbol(…","fields":{"slug":"/JS/lets-explore-symbol/"},"frontmatter":{"date":"2021.09.04","title":"Symbol을 알아보자","description":"ES6에서부터 추가된 7번째 타입 Symbol에 대해 알아보자","tags":["javascript"]}}]}},"pageContext":{"type":"tag","value":"javascript"}},"staticQueryHashes":["2841359383"],"slicesMap":{}}