{"componentChunkName":"component---src-templates-search-js","path":"/tags/recoil/","result":{"data":{"site":{"siteMetadata":{"title":"leego.dev.log"}},"allMdx":{"nodes":[{"excerpt":"이전 포스팅에서 context API, redux를 사용한 모달 관리에 대해서 소개했었다. // store/modalSlice.js\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst…","fields":{"slug":"/REACT/\bmodal-management-with-recoil/"},"frontmatter":{"date":"2023.10.02","title":"recoil을 사용한 전역 모달 관리(with TypeScript)","description":"(아마도) modal 관리 마지막 시리즈. recoil로 모달 관리하는 방법","tags":["react","recoil","modal"]}},{"excerpt":"💡 이 글은 'React스러운 상태관리 라이브러리, Recoil을 알아보자' 에서 이어집니다. recoil에서는 selector 를 사용하여 비동기 데이터를 처리한다.\n\nredux에서 비동기 처리를 할 때는 redux-thunk나 redux…","fields":{"slug":"/REACT/recoil-for-asynchronous-data-fetching/"},"frontmatter":{"date":"2022.09.17","title":"recoil과 비동기 데이터 호출 (+ 선언적 프로그래밍)","description":"recoil을 사용해서 비동기 데이터를 호출하는 방법을 소개한다. 이와 더헤 선언적 프로그래밍이 무엇인지 알아보고 선언적으로 비동기 처리하는 방식을 다뤘다.","tags":["react","recoil"]}},{"excerpt":"이제까지의 프로젝트에는 상태 관리 라이브러리로 항상 Redux를 사용했었는데, 그 이유는 단순하게 대부분의 사용자들이 redux를 사용했고, 사용자들이 가장 많이 사용하는 라이브러리 = 좋은 라이브러리라는 생각이 있었기 때문이다. Redux는 한때…","fields":{"slug":"/REACT/lets-explore-recoil/"},"frontmatter":{"date":"2022.08.17","title":"React스러운 상태관리 라이브러리, Recoil을 알아보자","description":"어느 순간, redux가 너무 과하다고 느껴졌다. 또 다른 상태관리 라이브러리 Recoil의 장점은 무엇인지, 어떻게 사용하는지 탐구해보았다.","tags":["react","recoil"]}}]}},"pageContext":{"type":"tag","value":"recoil"}},"staticQueryHashes":["2841359383"],"slicesMap":{}}