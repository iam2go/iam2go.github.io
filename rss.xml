<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Gatsby Starter Blog RSS Feed]]></title><description><![CDATA[개발 블로그]]></description><link>https://iam2go.github.io</link><generator>GatsbyJS</generator><lastBuildDate>Thu, 14 Nov 2024 14:26:48 GMT</lastBuildDate><item><title><![CDATA[POST 요청을 사용한 SSE 구현기]]></title><description><![CDATA[HTTP프로토콜은 비연결성을 가진 프로토콜이다. 클라이언트가 서버에 요청을 보내면, 서버는 그 요청에 대한 응답을 완료한 후 연결을 끊는다. 이러한 특성때문에 서버와 지속적인 커넥션이 필요한 상황에서는 불편함이 발생할 수 있다. 실시간으로 서버로부터…]]></description><link>https://iam2go.github.io/TECH/sse-with-post-request/</link><guid isPermaLink="false">https://iam2go.github.io/TECH/sse-with-post-request/</guid><pubDate>Thu, 14 Nov 2024 00:00:00 GMT</pubDate><content:encoded></content:encoded></item><item><title><![CDATA[갑자기 마주한 ChunkLoadError 해결하기]]></title><description><![CDATA[문제파악 어느 날부터 간헐적으로 ChunkLoadError가 발생했다.

보통 이러한 이슈는 배포 후 chunk 파일의 해쉬가 새롭게 바뀌면서 이전 파일을 보고있던 사용자가 페이지를 이동할 때 이전 chunk파일을 찾기 때문에 발생하는 이슈이다…]]></description><link>https://iam2go.github.io/ERRORLOG/chunk-load-error/</link><guid isPermaLink="false">https://iam2go.github.io/ERRORLOG/chunk-load-error/</guid><pubDate>Tue, 05 Nov 2024 00:00:00 GMT</pubDate><content:encoded></content:encoded></item><item><title><![CDATA[recoil을 사용한 전역 모달 관리(with TypeScript)]]></title><description><![CDATA[이전 포스팅에서 context API, redux를 사용한 모달 관리에 대해서 소개했었다. // store/modalSlice.js

import { createSlice } from "@reduxjs/toolkit";

const…]]></description><link>https://iam2go.github.io/REACT/modal-management-with-recoil/</link><guid isPermaLink="false">https://iam2go.github.io/REACT/modal-management-with-recoil/</guid><pubDate>Mon, 02 Oct 2023 00:00:00 GMT</pubDate><content:encoded></content:encoded></item><item><title><![CDATA[react-query는 어떻게 작동할까]]></title><description><![CDATA[react-query를 프로젝트에 셋팅할 때, 가장 먼저 하는 것은 앱의 최상위에서 QueryClientProvider로 우리의 앱을 감싸주는 일이다. import { QueryClient, QueryClientProvider } from…]]></description><link>https://iam2go.github.io/REACT/how-does-react-query-work/</link><guid isPermaLink="false">https://iam2go.github.io/REACT/how-does-react-query-work/</guid><pubDate>Mon, 19 Jun 2023 00:00:00 GMT</pubDate><content:encoded></content:encoded></item><item><title><![CDATA[Redux-saga를 통해 axios 호출 취소하기]]></title><description><![CDATA[회사 프로젝트에서 특정 수치를 조회하기 위해 사용하는 API가 있다. 이 API는 상황에 따라서 호출 시간이 오래 걸리고, 조회 항목이 많아질수록 호출 시간이 길어진다. 만약 사용자가 수치를 조회하는 중 화면을 나간다면, 수치 조회 API는…]]></description><link>https://iam2go.github.io/REACT/cancelling-axios-calls-with-react-saga/</link><guid isPermaLink="false">https://iam2go.github.io/REACT/cancelling-axios-calls-with-react-saga/</guid><pubDate>Thu, 22 Dec 2022 00:00:00 GMT</pubDate><content:encoded></content:encoded></item><item><title><![CDATA[CRA에서 Path alias 설정하기]]></title><description><![CDATA[이전 프로젝트에서는 괜찮았으나, 이번 React-Query 프로젝트에서는 Atomic system에서 착안한 새로운 폴더 구조를 시도해본 만큼 코드 상단의 무수한 ../../../ 들이 신경 쓰이기 시작했다. 그동안 미뤄왔던 path…]]></description><link>https://iam2go.github.io/REACT/setting-path-alias-in-cra/</link><guid isPermaLink="false">https://iam2go.github.io/REACT/setting-path-alias-in-cra/</guid><pubDate>Mon, 19 Dec 2022 00:00:00 GMT</pubDate><content:encoded></content:encoded></item><item><title><![CDATA[효율적으로 모달 관리하기]]></title><description><![CDATA[이 글은 Portal을 사용한 모달창 만들기에서 이어집니다. 모달을 필요한 컴포넌트에서 그때그때 렌더링 하는 방법은 불필요한 코드를 늘리며, 각각의 컴포넌트에서 모달에 관련된 로직까지 담당하게 되어 컴포넌트의 단일 책임 원칙을 위반한다. 모달의…]]></description><link>https://iam2go.github.io/REACT/efficient-modal-management/</link><guid isPermaLink="false">https://iam2go.github.io/REACT/efficient-modal-management/</guid><pubDate>Wed, 12 Oct 2022 00:00:00 GMT</pubDate><content:encoded></content:encoded></item><item><title><![CDATA[recoil과 비동기 데이터 호출 (+ 선언적 프로그래밍)]]></title><description><![CDATA[💡 이 글은 'React스러운 상태관리 라이브러리, Recoil을 알아보자' 에서 이어집니다. recoil에서는 selector 를 사용하여 비동기 데이터를 처리한다.

redux에서 비동기 처리를 할 때는 redux-thunk나 redux…]]></description><link>https://iam2go.github.io/REACT/recoil-for-asynchronous-data-fetching/</link><guid isPermaLink="false">https://iam2go.github.io/REACT/recoil-for-asynchronous-data-fetching/</guid><pubDate>Sat, 17 Sep 2022 00:00:00 GMT</pubDate><content:encoded></content:encoded></item><item><title><![CDATA[React스러운 상태관리 라이브러리, Recoil을 알아보자]]></title><description><![CDATA[이제까지의 프로젝트에는 상태 관리 라이브러리로 항상 Redux를 사용했었는데, 그 이유는 단순하게 대부분의 사용자들이 redux를 사용했고, 사용자들이 가장 많이 사용하는 라이브러리 = 좋은 라이브러리라는 생각이 있었기 때문이다. Redux는 한때…]]></description><link>https://iam2go.github.io/REACT/lets-explore-recoil/</link><guid isPermaLink="false">https://iam2go.github.io/REACT/lets-explore-recoil/</guid><pubDate>Wed, 17 Aug 2022 00:00:00 GMT</pubDate><content:encoded></content:encoded></item><item><title><![CDATA[다크모드 적용하기 (with. Styled-component, Context API)]]></title><description><![CDATA[다크 모드는 어두운 배경을 중심으로 전반적인 요소를 어두운 색상 체계로 구성한 low-light UI를 지칭한다. 스마트폰과 같은 디바이스의 사용량이 증가면서, 눈의 피로를 덜어주고 집중력을 높여준다는 이유로 다크모드가 등장하였다. 현재는 수많은…]]></description><link>https://iam2go.github.io/REACT/darkmode-in-react/</link><guid isPermaLink="false">https://iam2go.github.io/REACT/darkmode-in-react/</guid><pubDate>Thu, 11 Aug 2022 00:00:00 GMT</pubDate><content:encoded></content:encoded></item><item><title><![CDATA[Portal을 사용한 모달창 만들기]]></title><description><![CDATA[모달이란, 다이얼로그 실행 시 포커스와 제어권을 독점하여 다이얼로그를 종료하기 전까지 기존의 화면을 제어할 수 없는 기능을 뜻한다. 따라서 모달은 항상 화면의 최상위에 위치해야 하며, 모달이 열려있을 때는 기존 화면의 제어가 불가능해야 한다.

일반적…]]></description><link>https://iam2go.github.io/REACT/create-modal-using-portal/</link><guid isPermaLink="false">https://iam2go.github.io/REACT/create-modal-using-portal/</guid><pubDate>Tue, 14 Jun 2022 00:00:00 GMT</pubDate><content:encoded></content:encoded></item><item><title><![CDATA[유용한 Custom hook 소개]]></title><description><![CDATA[import { useEffect, useRef } from 'react'; function usePrevious(stateOrProp) {
  const previous = useRef(null);

  useEffect…]]></description><link>https://iam2go.github.io/REACT/introdution-to-useful-custom-hook/</link><guid isPermaLink="false">https://iam2go.github.io/REACT/introdution-to-useful-custom-hook/</guid><pubDate>Sun, 17 Oct 2021 00:00:00 GMT</pubDate><content:encoded></content:encoded></item><item><title><![CDATA[Custom hook을 만들기 전에 고려해야 할 것들]]></title><description><![CDATA[Building your own Hooks lets you extract component logic into reusable functions. 최근 내가 컴포넌트를 설계할 때 가장 중요하게 생각하는 것은 컴포넌트의 역할이 명확하게 나타나는가…]]></description><link>https://iam2go.github.io/REACT/considerations-before-creating-custom-hook/</link><guid isPermaLink="false">https://iam2go.github.io/REACT/considerations-before-creating-custom-hook/</guid><pubDate>Sat, 16 Oct 2021 00:00:00 GMT</pubDate><content:encoded></content:encoded></item><item><title><![CDATA[useCallback과 useMemo 제대로 사용하기]]></title><description><![CDATA[useCallback과 useMemo는 메모이제이션 된 값을 반환한다. 차이점은 useCallback은 함수를 메모이제이션하고 useMemo는 값을 메모이제이션한다. 면접을 준비하여 외웠던 대답이다. 실제 프로젝트를 하면서 useCallback을…]]></description><link>https://iam2go.github.io/REACT/profer-usage-of-usecallback-usememo/</link><guid isPermaLink="false">https://iam2go.github.io/REACT/profer-usage-of-usecallback-usememo/</guid><pubDate>Sun, 12 Sep 2021 00:00:00 GMT</pubDate><content:encoded></content:encoded></item><item><title><![CDATA[React-saga를 알아보자]]></title><description><![CDATA[공식문서에서는 Redux-saga를 다음과 같이 소개하고 있다. Redux-saga는 react/redux 애플리케이션의 사이드 이펙트, 예를 들면 데이터 fetching이나 브라우저 캐시에 접근하는 순수하지 않은 비동기 동작들을 더 쉽고 보기…]]></description><link>https://iam2go.github.io/REACT/lets-explore-redux-saga/</link><guid isPermaLink="false">https://iam2go.github.io/REACT/lets-explore-redux-saga/</guid><pubDate>Tue, 07 Sep 2021 00:00:00 GMT</pubDate><content:encoded></content:encoded></item><item><title><![CDATA[Generator란 무엇일까?]]></title><description><![CDATA[function* generateSequence() { yield 1;
  yield 2;
  return 3;
}

일반 함수는 function 키워드로 시작한다면, 제너레이터 함수는 function* 키워드로 시작한다. (화살표 함수는…]]></description><link>https://iam2go.github.io/JS/what-is-a-generator/</link><guid isPermaLink="false">https://iam2go.github.io/JS/what-is-a-generator/</guid><pubDate>Mon, 06 Sep 2021 00:00:00 GMT</pubDate><content:encoded></content:encoded></item><item><title><![CDATA[for-of와 Iterator]]></title><description><![CDATA[for(let value of myArray){ console.log(value);
}


for-in 문이 객체의 속성들을 순회하기 위한 구문이라면, for-of 문은 배열의 요소들, 즉 data 를 순회하기 위한 구문이다. 정확히는 일반 Obj…]]></description><link>https://iam2go.github.io/JS/for-of-and-iterator/</link><guid isPermaLink="false">https://iam2go.github.io/JS/for-of-and-iterator/</guid><pubDate>Sun, 05 Sep 2021 00:00:00 GMT</pubDate><content:encoded></content:encoded></item><item><title><![CDATA[Symbol을 알아보자]]></title><description><![CDATA[심볼(Symbol) 은 ES6에서부터 추가된 7번째 타입의 값이다. 심볼(Symbol)은 프로그램이 이름 충돌의 위험 없이 속성(property)의 키(key)로 쓰기 위해 생성하고 사용할 수 있는 값이다.

let newSymbol = Symbol(…]]></description><link>https://iam2go.github.io/JS/lets-explore-symbol/</link><guid isPermaLink="false">https://iam2go.github.io/JS/lets-explore-symbol/</guid><pubDate>Sat, 04 Sep 2021 00:00:00 GMT</pubDate><content:encoded></content:encoded></item></channel></rss>