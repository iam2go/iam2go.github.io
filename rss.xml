<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Gatsby Starter Blog RSS Feed]]></title><description><![CDATA[개발 블로그]]></description><link>https://iam2go.github.io</link><generator>GatsbyJS</generator><lastBuildDate>Wed, 10 Apr 2024 15:05:08 GMT</lastBuildDate><item><title><![CDATA[다크모드 적용하기 (with. Styled-component, Context API)]]></title><description><![CDATA[다크 모드는 어두운 배경을 중심으로 전반적인 요소를 어두운 색상 체계로 구성한 low-light UI를 지칭한다. 스마트폰과 같은 디바이스의 사용량이 증가면서, 눈의 피로를 덜어주고 집중력을 높여준다는 이유로 다크모드가 등장하였다. 현재는 수많은…]]></description><link>https://iam2go.github.io/REACT/darkmode-in-react/</link><guid isPermaLink="false">https://iam2go.github.io/REACT/darkmode-in-react/</guid><pubDate>Thu, 11 Aug 2022 00:00:00 GMT</pubDate><content:encoded></content:encoded></item><item><title><![CDATA[useCallback과 useMemo 제대로 사용하기]]></title><description><![CDATA[useCallback과 useMemo는 메모이제이션 된 값을 반환한다. 차이점은 useCallback은 함수를 메모이제이션하고 useMemo는 값을 메모이제이션한다. 면접을 준비하여 외웠던 대답이다. 실제 프로젝트를 하면서 useCallback을…]]></description><link>https://iam2go.github.io/REACT/profer-usage-of-usecallback-usememo/</link><guid isPermaLink="false">https://iam2go.github.io/REACT/profer-usage-of-usecallback-usememo/</guid><pubDate>Sun, 12 Sep 2021 00:00:00 GMT</pubDate><content:encoded></content:encoded></item><item><title><![CDATA[React-saga를 알아보자]]></title><description><![CDATA[공식문서에서는 Redux-saga를 다음과 같이 소개하고 있다. Redux-saga는 react/redux 애플리케이션의 사이드 이펙트, 예를 들면 데이터 fetching이나 브라우저 캐시에 접근하는 순수하지 않은 비동기 동작들을 더 쉽고 보기…]]></description><link>https://iam2go.github.io/REACT/lets-explore-redux-saga/</link><guid isPermaLink="false">https://iam2go.github.io/REACT/lets-explore-redux-saga/</guid><pubDate>Tue, 07 Sep 2021 00:00:00 GMT</pubDate><content:encoded></content:encoded></item><item><title><![CDATA[Generator란 무엇일까?]]></title><description><![CDATA[function* generateSequence() { yield 1;
  yield 2;
  return 3;
}

일반 함수는 function 키워드로 시작한다면, 제너레이터 함수는 function* 키워드로 시작한다. (화살표 함수는…]]></description><link>https://iam2go.github.io/JS/what-is-a-generator/</link><guid isPermaLink="false">https://iam2go.github.io/JS/what-is-a-generator/</guid><pubDate>Mon, 06 Sep 2021 00:00:00 GMT</pubDate><content:encoded></content:encoded></item><item><title><![CDATA[for-of와 Iterator]]></title><description><![CDATA[for(let value of myArray){ console.log(value);
}


for-in 문이 객체의 속성들을 순회하기 위한 구문이라면, for-of 문은 배열의 요소들, 즉 data 를 순회하기 위한 구문이다. 정확히는 일반 Obj…]]></description><link>https://iam2go.github.io/JS/for-of-and-iterator/</link><guid isPermaLink="false">https://iam2go.github.io/JS/for-of-and-iterator/</guid><pubDate>Sun, 05 Sep 2021 00:00:00 GMT</pubDate><content:encoded></content:encoded></item><item><title><![CDATA[Symbol을 알아보자]]></title><description><![CDATA[심볼(Symbol) 은 ES6에서부터 추가된 7번째 타입의 값이다. 심볼(Symbol)은 프로그램이 이름 충돌의 위험 없이 속성(property)의 키(key)로 쓰기 위해 생성하고 사용할 수 있는 값이다.

let newSymbol = Symbol(…]]></description><link>https://iam2go.github.io/JS/lets-explore-symbol/</link><guid isPermaLink="false">https://iam2go.github.io/JS/lets-explore-symbol/</guid><pubDate>Sat, 04 Sep 2021 00:00:00 GMT</pubDate><content:encoded></content:encoded></item></channel></rss>